{"version":3,"sources":["index.tsx"],"names":["State","left","swipeLeft","swipeRight","right","normal","swipeNormal","snapPoint","value","velocity","points","point","deltas","map","p","Math","abs","minDelta","min","apply","filter","springConfig","stiffness","damping","mass","overshootClamping","restDisplacementThreshold","restSpeedThreshold","timingConfig","duration","easing","Easing","bezier","SwipeRow","props","ref","children","style","buttonWidth","autoClose","disabled","onPress","onSwipe","testID","accessibilityLabel","rowIndex","disabledOpacity","ButtonComponent","View","TouchableOpacity","activeRow","translateX","minTranslateX","maxTranslateX","contentLayout","width","height","state","swipeEnable","length","snapPoints","translateWith","push","current","onLayout","event","nativeEvent","layout","onButtonPress","content","onPressRow","closeRow","close","getState","onSwipeRow","newValue","onGestureEvent","onStart","_","ctx","x","onActive","nextTranslate","translationX","onFinish","snapTo","velocityX","contentStyle","transform","leftButtonStyle","checkTranslate","rightButtonStyle","styles","viewActions","button","reverse","index","opacity","StyleSheet","create","container","absoluteFillObject","flexDirection","overflow","position","top","bottom","React","memo","equals"],"mappings":"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","sourcesContent":["/**\n * Created by nghinv on Fri Jun 18 2021\n * Copyright (c) 2021 nghinv@lumi.biz\n */\n\nimport React, {\n  forwardRef,\n  useRef,\n  useCallback,\n  useImperativeHandle,\n} from 'react';\nimport {\n  View,\n  StyleSheet,\n  TouchableOpacity,\n  ViewStyle,\n  StyleProp,\n  LayoutChangeEvent,\n} from 'react-native';\nimport {\n  PanGestureHandler,\n  PanGestureHandlerGestureEvent,\n} from 'react-native-gesture-handler';\nimport Animated, {\n  Easing,\n  useAnimatedGestureHandler,\n  useAnimatedStyle,\n  useSharedValue,\n  withSpring,\n  withTiming,\n  runOnJS,\n  useAnimatedReaction,\n} from 'react-native-reanimated';\nimport equals from 'react-fast-compare';\nimport Button, { ActionType } from './Button';\n\ntype ButtonComponentProps = React.ElementType &\n  (typeof TouchableOpacity | typeof View);\n\ntype ContextX = {\n  x: number;\n};\n\nexport const State = {\n  left: -1,\n  swipeLeft: -2,\n  swipeRight: 2,\n  right: 1,\n  normal: 0,\n  swipeNormal: 100,\n};\n\ninterface SwipeRowProps {\n  left?: Array<ActionType>;\n  right?: Array<ActionType>;\n  children?: React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n  buttonWidth?: number;\n  autoClose?: boolean;\n  onPress?: () => void;\n  onSwipe?: (value: number) => void;\n  activeRow?: Animated.SharedValue<number>;\n  rowIndex?: number;\n  disabled?: boolean;\n  disabledOpacity?: number;\n  testID?: string;\n  accessibilityLabel?: string;\n}\n\nexport const snapPoint = (\n  value: number,\n  velocity: number,\n  points: ReadonlyArray<number>\n): number => {\n  'worklet';\n\n  const point = value + 0.2 * velocity;\n  const deltas = points.map((p) => Math.abs(point - p));\n  const minDelta = Math.min.apply(null, deltas);\n  return points.filter((p) => Math.abs(point - p) === minDelta)[0];\n};\n\nconst springConfig = (velocity: number) => {\n  'worklet';\n\n  return {\n    stiffness: 1000,\n    damping: 500,\n    mass: 3,\n    overshootClamping: true,\n    restDisplacementThreshold: 0.01,\n    restSpeedThreshold: 0.01,\n    velocity,\n  };\n};\n\nconst timingConfig = {\n  duration: 400,\n  easing: Easing.bezier(0.25, 0.1, 0.25, 1),\n};\n\nfunction SwipeRow(props: SwipeRowProps, ref: React.Ref<any>) {\n  const {\n    children,\n    left,\n    right,\n    style,\n    buttonWidth = 75 as number,\n    autoClose = true,\n    disabled = false,\n    onPress,\n    onSwipe,\n    testID,\n    accessibilityLabel,\n    rowIndex = -1,\n    disabledOpacity = 0.6,\n  } = props;\n  const ButtonComponent: ButtonComponentProps =\n    disabled || !onPress ? View : TouchableOpacity;\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const activeRow = props.activeRow || useSharedValue(-1);\n  const translateX = useSharedValue(0);\n  const minTranslateX = useRef(0);\n  const maxTranslateX = useRef(0);\n  const contentLayout = {\n    width: useSharedValue(0),\n    height: useSharedValue(0),\n  };\n  const state = useSharedValue(State.normal);\n  const swipeEnable =\n    !disabled &&\n    ((left?.length as number) > 0 || (right?.length as number) > 0);\n  const snapPoints: Array<number> = [0];\n  if (left?.length && left.length > 0) {\n    const translateWith = left.length * buttonWidth;\n    snapPoints.push(translateWith);\n    maxTranslateX.current = translateWith;\n  }\n  if (right?.length && right.length > 0) {\n    const translateWith = -right.length * buttonWidth;\n    snapPoints.push(translateWith);\n    minTranslateX.current = translateWith;\n  }\n\n  const onLayout = (event: LayoutChangeEvent) => {\n    contentLayout.width.value = event.nativeEvent.layout.width;\n    contentLayout.height.value = event.nativeEvent.layout.height;\n  };\n\n  const onButtonPress = (content: any) => {\n    if (autoClose) {\n      translateX.value = withTiming(0, timingConfig, () => {\n        state.value = State.normal;\n      });\n    }\n    content?.onPress?.();\n  };\n\n  const onPressRow = () => {\n    if (autoClose) {\n      translateX.value = withTiming(0, timingConfig, () => {\n        state.value = State.normal;\n      });\n    }\n    onPress?.();\n  };\n\n  const closeRow = useCallback(() => {\n    translateX.value = withTiming(0, { ...timingConfig, duration: 250 }, () => {\n      state.value = State.normal;\n    });\n  }, [translateX, state]);\n\n  useImperativeHandle(ref, () => ({\n    close: () => {\n      closeRow();\n    },\n    getState: () => {\n      return state.value;\n    },\n  }));\n\n  const onSwipeRow = (value: number) => {\n    onSwipe?.(value);\n  };\n\n  useAnimatedReaction(\n    () => {\n      return activeRow.value;\n    },\n    (newValue) => {\n      if (newValue !== -1 && newValue !== rowIndex) {\n        runOnJS(closeRow)();\n      }\n    }\n  );\n\n  const onGestureEvent = useAnimatedGestureHandler<\n    PanGestureHandlerGestureEvent,\n    ContextX\n  >({\n    onStart: (_, ctx) => {\n      activeRow.value = rowIndex;\n      ctx.x = translateX.value;\n      runOnJS(onSwipeRow)(state.value);\n    },\n    onActive: (event, ctx) => {\n      const nextTranslate = event.translationX + ctx.x;\n      if (state.value === State.swipeLeft && nextTranslate < 0) {\n        translateX.value = 0;\n        return;\n      }\n      if (state.value === State.swipeRight && nextTranslate > 0) {\n        translateX.value = 0;\n        return;\n      }\n\n      // eslint-disable-next-line prettier/prettier\n      state.value = nextTranslate > 0 ? State.swipeLeft : nextTranslate < 0 ? State.swipeRight : State.swipeNormal;\n\n      if (nextTranslate > maxTranslateX.current) {\n        translateX.value =\n          maxTranslateX.current + (nextTranslate - maxTranslateX.current) * 0.1;\n      } else if (nextTranslate < minTranslateX.current) {\n        translateX.value =\n          minTranslateX.current + (nextTranslate - minTranslateX.current) * 0.1;\n      } else {\n        translateX.value = nextTranslate;\n      }\n    },\n    onFinish: (event) => {\n      let snapTo = snapPoint(translateX.value, event.velocityX, snapPoints);\n      if (\n        (state.value === State.swipeLeft && snapTo < 0) ||\n        (state.value === State.swipeRight && snapTo > 0)\n      ) {\n        snapTo = 0;\n      }\n      state.value =\n        snapTo > 0 ? State.left : snapTo < 0 ? State.right : State.normal;\n\n      translateX.value = withSpring(snapTo, springConfig(event.velocityX));\n    },\n  });\n\n  const contentStyle = useAnimatedStyle(() => {\n    return {\n      transform: [{ translateX: translateX.value }],\n    };\n  });\n\n  const leftButtonStyle = useAnimatedStyle(() => {\n    const checkTranslate =\n      translateX.value > 0 && state.value !== State.swipeRight;\n    return {\n      left: 0,\n      height: contentLayout.height.value,\n      width: checkTranslate ? translateX.value : 0,\n    };\n  });\n\n  const rightButtonStyle = useAnimatedStyle(() => {\n    const checkTranslate =\n      translateX.value < 0 && state.value !== State.swipeLeft;\n    return {\n      right: 0,\n      height: contentLayout.height.value,\n      width: checkTranslate ? -translateX.value : 0,\n    };\n  });\n\n  return (\n    <View style={style}>\n      <View style={styles.viewActions}>\n        {left && (\n          <Animated.View style={[styles.button, leftButtonStyle]}>\n            {left?.reverse().map((content, index) => (\n              <Button\n                key={index}\n                content={content}\n                width={buttonWidth}\n                index={left.length - index}\n                translateX={translateX}\n                length={left.length}\n                maxTranslate={left.length * buttonWidth}\n                type=\"left\"\n                onPress={() => onButtonPress(content)}\n              />\n            ))}\n          </Animated.View>\n        )}\n        {right && (\n          <Animated.View style={[styles.button, rightButtonStyle]}>\n            {right?.map((content, index) => (\n              <Button\n                key={index}\n                content={content}\n                width={buttonWidth}\n                index={right.length - index}\n                translateX={translateX}\n                length={right.length}\n                maxTranslate={right.length * buttonWidth}\n                type=\"right\"\n                onPress={() => onButtonPress(content)}\n              />\n            ))}\n          </Animated.View>\n        )}\n      </View>\n      <PanGestureHandler\n        enabled={swipeEnable}\n        onGestureEvent={onGestureEvent}\n        activeOffsetX={[-10, 10]}\n        shouldCancelWhenOutside\n      >\n        <Animated.View\n          onLayout={onLayout}\n          testID={testID}\n          accessibilityLabel={accessibilityLabel}\n          // eslint-disable-next-line react-native/no-inline-styles\n          style={[{ opacity: disabled ? disabledOpacity : 1 }, contentStyle]}\n        >\n          <ButtonComponent onPress={onPressRow}>{children}</ButtonComponent>\n        </Animated.View>\n      </PanGestureHandler>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {},\n  viewActions: {\n    ...StyleSheet.absoluteFillObject,\n  },\n  button: {\n    flexDirection: 'row',\n    overflow: 'hidden',\n    position: 'absolute',\n    top: 0,\n    bottom: 0,\n  },\n});\n\nexport default React.memo(forwardRef(SwipeRow), equals);\n"]}