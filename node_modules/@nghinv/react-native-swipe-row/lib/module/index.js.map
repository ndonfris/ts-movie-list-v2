{"version":3,"sources":["index.tsx"],"names":["React","forwardRef","useRef","useCallback","useImperativeHandle","View","StyleSheet","TouchableOpacity","PanGestureHandler","Animated","Easing","useAnimatedGestureHandler","useAnimatedStyle","useSharedValue","withSpring","withTiming","runOnJS","useAnimatedReaction","equals","Button","State","left","swipeLeft","swipeRight","right","normal","swipeNormal","snapPoint","value","velocity","points","point","deltas","map","p","Math","abs","minDelta","min","apply","filter","springConfig","stiffness","damping","mass","overshootClamping","restDisplacementThreshold","restSpeedThreshold","timingConfig","duration","easing","bezier","SwipeRow","props","ref","children","style","buttonWidth","autoClose","disabled","onPress","onSwipe","testID","accessibilityLabel","rowIndex","disabledOpacity","ButtonComponent","activeRow","translateX","minTranslateX","maxTranslateX","contentLayout","width","height","state","swipeEnable","length","snapPoints","translateWith","push","current","onLayout","event","nativeEvent","layout","onButtonPress","content","onPressRow","closeRow","close","getState","onSwipeRow","newValue","onGestureEvent","onStart","_","ctx","x","onActive","nextTranslate","translationX","onFinish","snapTo","velocityX","contentStyle","transform","leftButtonStyle","checkTranslate","rightButtonStyle","styles","viewActions","button","reverse","index","opacity","create","container","absoluteFillObject","flexDirection","overflow","position","top","bottom","memo"],"mappings":"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","sourcesContent":["/**\n * Created by nghinv on Fri Jun 18 2021\n * Copyright (c) 2021 nghinv@lumi.biz\n */\n\nimport React, {\n  forwardRef,\n  useRef,\n  useCallback,\n  useImperativeHandle,\n} from 'react';\nimport {\n  View,\n  StyleSheet,\n  TouchableOpacity,\n  ViewStyle,\n  StyleProp,\n  LayoutChangeEvent,\n} from 'react-native';\nimport {\n  PanGestureHandler,\n  PanGestureHandlerGestureEvent,\n} from 'react-native-gesture-handler';\nimport Animated, {\n  Easing,\n  useAnimatedGestureHandler,\n  useAnimatedStyle,\n  useSharedValue,\n  withSpring,\n  withTiming,\n  runOnJS,\n  useAnimatedReaction,\n} from 'react-native-reanimated';\nimport equals from 'react-fast-compare';\nimport Button, { ActionType } from './Button';\n\ntype ButtonComponentProps = React.ElementType &\n  (typeof TouchableOpacity | typeof View);\n\ntype ContextX = {\n  x: number;\n};\n\nexport const State = {\n  left: -1,\n  swipeLeft: -2,\n  swipeRight: 2,\n  right: 1,\n  normal: 0,\n  swipeNormal: 100,\n};\n\ninterface SwipeRowProps {\n  left?: Array<ActionType>;\n  right?: Array<ActionType>;\n  children?: React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n  buttonWidth?: number;\n  autoClose?: boolean;\n  onPress?: () => void;\n  onSwipe?: (value: number) => void;\n  activeRow?: Animated.SharedValue<number>;\n  rowIndex?: number;\n  disabled?: boolean;\n  disabledOpacity?: number;\n  testID?: string;\n  accessibilityLabel?: string;\n}\n\nexport const snapPoint = (\n  value: number,\n  velocity: number,\n  points: ReadonlyArray<number>\n): number => {\n  'worklet';\n\n  const point = value + 0.2 * velocity;\n  const deltas = points.map((p) => Math.abs(point - p));\n  const minDelta = Math.min.apply(null, deltas);\n  return points.filter((p) => Math.abs(point - p) === minDelta)[0];\n};\n\nconst springConfig = (velocity: number) => {\n  'worklet';\n\n  return {\n    stiffness: 1000,\n    damping: 500,\n    mass: 3,\n    overshootClamping: true,\n    restDisplacementThreshold: 0.01,\n    restSpeedThreshold: 0.01,\n    velocity,\n  };\n};\n\nconst timingConfig = {\n  duration: 400,\n  easing: Easing.bezier(0.25, 0.1, 0.25, 1),\n};\n\nfunction SwipeRow(props: SwipeRowProps, ref: React.Ref<any>) {\n  const {\n    children,\n    left,\n    right,\n    style,\n    buttonWidth = 75 as number,\n    autoClose = true,\n    disabled = false,\n    onPress,\n    onSwipe,\n    testID,\n    accessibilityLabel,\n    rowIndex = -1,\n    disabledOpacity = 0.6,\n  } = props;\n  const ButtonComponent: ButtonComponentProps =\n    disabled || !onPress ? View : TouchableOpacity;\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const activeRow = props.activeRow || useSharedValue(-1);\n  const translateX = useSharedValue(0);\n  const minTranslateX = useRef(0);\n  const maxTranslateX = useRef(0);\n  const contentLayout = {\n    width: useSharedValue(0),\n    height: useSharedValue(0),\n  };\n  const state = useSharedValue(State.normal);\n  const swipeEnable =\n    !disabled &&\n    ((left?.length as number) > 0 || (right?.length as number) > 0);\n  const snapPoints: Array<number> = [0];\n  if (left?.length && left.length > 0) {\n    const translateWith = left.length * buttonWidth;\n    snapPoints.push(translateWith);\n    maxTranslateX.current = translateWith;\n  }\n  if (right?.length && right.length > 0) {\n    const translateWith = -right.length * buttonWidth;\n    snapPoints.push(translateWith);\n    minTranslateX.current = translateWith;\n  }\n\n  const onLayout = (event: LayoutChangeEvent) => {\n    contentLayout.width.value = event.nativeEvent.layout.width;\n    contentLayout.height.value = event.nativeEvent.layout.height;\n  };\n\n  const onButtonPress = (content: any) => {\n    if (autoClose) {\n      translateX.value = withTiming(0, timingConfig, () => {\n        state.value = State.normal;\n      });\n    }\n    content?.onPress?.();\n  };\n\n  const onPressRow = () => {\n    if (autoClose) {\n      translateX.value = withTiming(0, timingConfig, () => {\n        state.value = State.normal;\n      });\n    }\n    onPress?.();\n  };\n\n  const closeRow = useCallback(() => {\n    translateX.value = withTiming(0, { ...timingConfig, duration: 250 }, () => {\n      state.value = State.normal;\n    });\n  }, [translateX, state]);\n\n  useImperativeHandle(ref, () => ({\n    close: () => {\n      closeRow();\n    },\n    getState: () => {\n      return state.value;\n    },\n  }));\n\n  const onSwipeRow = (value: number) => {\n    onSwipe?.(value);\n  };\n\n  useAnimatedReaction(\n    () => {\n      return activeRow.value;\n    },\n    (newValue) => {\n      if (newValue !== -1 && newValue !== rowIndex) {\n        runOnJS(closeRow)();\n      }\n    }\n  );\n\n  const onGestureEvent = useAnimatedGestureHandler<\n    PanGestureHandlerGestureEvent,\n    ContextX\n  >({\n    onStart: (_, ctx) => {\n      activeRow.value = rowIndex;\n      ctx.x = translateX.value;\n      runOnJS(onSwipeRow)(state.value);\n    },\n    onActive: (event, ctx) => {\n      const nextTranslate = event.translationX + ctx.x;\n      if (state.value === State.swipeLeft && nextTranslate < 0) {\n        translateX.value = 0;\n        return;\n      }\n      if (state.value === State.swipeRight && nextTranslate > 0) {\n        translateX.value = 0;\n        return;\n      }\n\n      // eslint-disable-next-line prettier/prettier\n      state.value = nextTranslate > 0 ? State.swipeLeft : nextTranslate < 0 ? State.swipeRight : State.swipeNormal;\n\n      if (nextTranslate > maxTranslateX.current) {\n        translateX.value =\n          maxTranslateX.current + (nextTranslate - maxTranslateX.current) * 0.1;\n      } else if (nextTranslate < minTranslateX.current) {\n        translateX.value =\n          minTranslateX.current + (nextTranslate - minTranslateX.current) * 0.1;\n      } else {\n        translateX.value = nextTranslate;\n      }\n    },\n    onFinish: (event) => {\n      let snapTo = snapPoint(translateX.value, event.velocityX, snapPoints);\n      if (\n        (state.value === State.swipeLeft && snapTo < 0) ||\n        (state.value === State.swipeRight && snapTo > 0)\n      ) {\n        snapTo = 0;\n      }\n      state.value =\n        snapTo > 0 ? State.left : snapTo < 0 ? State.right : State.normal;\n\n      translateX.value = withSpring(snapTo, springConfig(event.velocityX));\n    },\n  });\n\n  const contentStyle = useAnimatedStyle(() => {\n    return {\n      transform: [{ translateX: translateX.value }],\n    };\n  });\n\n  const leftButtonStyle = useAnimatedStyle(() => {\n    const checkTranslate =\n      translateX.value > 0 && state.value !== State.swipeRight;\n    return {\n      left: 0,\n      height: contentLayout.height.value,\n      width: checkTranslate ? translateX.value : 0,\n    };\n  });\n\n  const rightButtonStyle = useAnimatedStyle(() => {\n    const checkTranslate =\n      translateX.value < 0 && state.value !== State.swipeLeft;\n    return {\n      right: 0,\n      height: contentLayout.height.value,\n      width: checkTranslate ? -translateX.value : 0,\n    };\n  });\n\n  return (\n    <View style={style}>\n      <View style={styles.viewActions}>\n        {left && (\n          <Animated.View style={[styles.button, leftButtonStyle]}>\n            {left?.reverse().map((content, index) => (\n              <Button\n                key={index}\n                content={content}\n                width={buttonWidth}\n                index={left.length - index}\n                translateX={translateX}\n                length={left.length}\n                maxTranslate={left.length * buttonWidth}\n                type=\"left\"\n                onPress={() => onButtonPress(content)}\n              />\n            ))}\n          </Animated.View>\n        )}\n        {right && (\n          <Animated.View style={[styles.button, rightButtonStyle]}>\n            {right?.map((content, index) => (\n              <Button\n                key={index}\n                content={content}\n                width={buttonWidth}\n                index={right.length - index}\n                translateX={translateX}\n                length={right.length}\n                maxTranslate={right.length * buttonWidth}\n                type=\"right\"\n                onPress={() => onButtonPress(content)}\n              />\n            ))}\n          </Animated.View>\n        )}\n      </View>\n      <PanGestureHandler\n        enabled={swipeEnable}\n        onGestureEvent={onGestureEvent}\n        activeOffsetX={[-10, 10]}\n        shouldCancelWhenOutside\n      >\n        <Animated.View\n          onLayout={onLayout}\n          testID={testID}\n          accessibilityLabel={accessibilityLabel}\n          // eslint-disable-next-line react-native/no-inline-styles\n          style={[{ opacity: disabled ? disabledOpacity : 1 }, contentStyle]}\n        >\n          <ButtonComponent onPress={onPressRow}>{children}</ButtonComponent>\n        </Animated.View>\n      </PanGestureHandler>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {},\n  viewActions: {\n    ...StyleSheet.absoluteFillObject,\n  },\n  button: {\n    flexDirection: 'row',\n    overflow: 'hidden',\n    position: 'absolute',\n    top: 0,\n    bottom: 0,\n  },\n});\n\nexport default React.memo(forwardRef(SwipeRow), equals);\n"]}