{"ast":null,"code":"import React,{useRef}from'react';import Modal from\"react-native-web/dist/exports/Modal\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import useWindowDimensions from\"react-native-web/dist/exports/useWindowDimensions\";import Pressable from\"react-native-web/dist/exports/Pressable\";import View from\"react-native-web/dist/exports/View\";import Animated from\"react-native-web/dist/exports/Animated\";import ScrollView from\"react-native-web/dist/exports/ScrollView\";import SafeAreaView from\"react-native-web/dist/exports/SafeAreaView\";import GestureRecognizer from'react-native-swipe-gestures';import PopupLeft from\"./PopupPages/PopupLeft\";import PopupCenter from\"./PopupPages/PopupCenter\";import PopupRight from\"./PopupPages/PopupRight\";import{AntDesign}from'@expo/vector-icons';import colors from\"../helpers/Colors\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function CloseButton(_ref){var updateModal=_ref.updateModal,modalVisible=_ref.modalVisible;return _jsx(Pressable,{style:[styles.button,styles.buttonClose],onPress:function onPress(){return updateModal(!modalVisible);},children:_jsx(AntDesign,{name:\"closecircleo\",size:24,color:colors.dullWhite})});}var Popup=function Popup(_ref2){var moreInfo=_ref2.moreInfo,updateModal=_ref2.updateModal,modalVisible=_ref2.modalVisible;var PopupTiles=[_jsx(PopupLeft,{moreInfo:moreInfo}),_jsx(PopupCenter,{moreInfo:moreInfo}),_jsx(PopupRight,{moreInfo:moreInfo})];var scrollX=useRef(new Animated.Value(0)).current;var _useWindowDimensions=useWindowDimensions(),windowWidth=_useWindowDimensions.width;return _jsx(View,{style:styles.container,children:_jsx(GestureRecognizer,{onSwipeDown:function onSwipeDown(){return updateModal(!modalVisible);},config:{velocityThreshold:0.3,directionalOffsetThreshold:300},children:_jsx(Modal,{animationType:\"slide\",transparent:true,visible:modalVisible,onRequestClose:function onRequestClose(){updateModal(!modalVisible);},children:_jsx(View,{style:styles.centeredView,children:_jsxs(View,{style:styles.modalView,children:[_jsx(CloseButton,{updateModal:updateModal,modalVisible:modalVisible}),_jsx(SafeAreaView,{style:styles.widthContainer,children:_jsx(ScrollView,{horizontal:true,pagingEnabled:true,showsHorizontalScrollIndicator:false,contentOffset:{x:windowWidth-50,y:0},zoomScale:1,scrollEventThrottle:1,snapToStart:false,snapToEnd:false,onScroll:Animated.event([{nativeEvent:{contentOffset:{x:scrollX}}}],{useNativeDriver:false}),children:PopupTiles.map(function(popupTile,index){return _jsx(Animated.View,{style:{width:windowWidth-50,height:\"100%\"},children:popupTile},index);})})}),_jsx(View,{style:styles.footer,children:PopupTiles.map(function(movieTile,index){var width=scrollX.interpolate({inputRange:[windowWidth*(index-1),windowWidth*index,windowWidth*(index+1)],outputRange:[8,16,8],extrapolate:\"clamp\"});return _jsx(Animated.View,{style:[styles.normalDot,{width:width}]},index);})})]})})})})});};var styles=StyleSheet.create({centeredView:{flex:1,marginTop:30,justifyContent:\"center\",alignItems:\"center\"},modalView:{backgroundColor:colors.barDarker,borderRadius:20,width:\"90%\",height:\"75%\",shadowColor:\"#000\",shadowOffset:{width:5,height:5},shadowOpacity:0.5,shadowRadius:3,elevation:5},footer:{color:colors.dullWhite,flexDirection:\"row\",alignSelf:\"center\",justifyContent:\"space-evenly\",width:\"20%\",position:\"absolute\",bottom:10},button:{color:colors.dullWhite,borderRadius:30,padding:10,backgroundColor:\"transparent\",position:'absolute',top:-5,right:-5,elevation:2},buttonClose:{backgroundColor:\"transparent\"},container:{borderRadius:15},widthContainer:{width:\"95%\",height:\"95%\"},normalDot:{height:8,width:8,borderRadius:4,backgroundColor:colors.dullWhite,marginHorizontal:4},indicatorContainer:{flexDirection:\"row\",alignItems:\"center\",justifyContent:\"center\"}});export default Popup;","map":{"version":3,"sources":["/home/ndonfris/Projects/ts-movie-list-frontend/frontend/components/Popup.tsx"],"names":["React","useRef","GestureRecognizer","PopupLeft","PopupCenter","PopupRight","AntDesign","colors","CloseButton","updateModal","modalVisible","styles","button","buttonClose","dullWhite","Popup","moreInfo","PopupTiles","scrollX","Animated","Value","current","useWindowDimensions","windowWidth","width","container","velocityThreshold","directionalOffsetThreshold","centeredView","modalView","widthContainer","x","y","event","nativeEvent","contentOffset","useNativeDriver","map","popupTile","index","height","footer","movieTile","interpolate","inputRange","outputRange","extrapolate","normalDot","StyleSheet","create","flex","marginTop","justifyContent","alignItems","backgroundColor","barDarker","borderRadius","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","color","flexDirection","alignSelf","position","bottom","padding","top","right","marginHorizontal","indicatorContainer"],"mappings":"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","sourcesContent":["/**\n * File:        Popup.tsx\n * Author:      Nick Donfris\n * Created:     01/27/22\n */\nimport React, { useRef } from 'react';\nimport { Modal, StyleSheet, useWindowDimensions, Pressable, View, Animated, ScrollView, SafeAreaView } from \"react-native\";\nimport GestureRecognizer from 'react-native-swipe-gestures';\nimport PopupLeft from \"./PopupPages/PopupLeft\";\nimport PopupCenter from \"./PopupPages/PopupCenter\";\nimport PopupRight from \"./PopupPages/PopupRight\";\nimport { MovieMoreInfo } from '../helpers/Interfaces';\nimport { AntDesign } from '@expo/vector-icons';\nimport colors from '../helpers/Colors';\n\n/* Props used in the CloseButton Functional Component */\ninterface CloseProps {\n    modalVisible: boolean;\n    updateModal: (modalVisible: boolean) => void;\n}\n\n/**\n * <CloseButton /> functional component that is rendered in the top right corner of\n * the Popup. This component functions takes the modalVisible state (which must be true)\n * and sets it to false.\n *\n * @param {function} updateModal - the function called updating the modalVisible state of\n *                                  the popup.\n * @param {boolean} modalVisible - the state of the visibility of this modal\n *\n * @returns {JSX.Element} - closes/removes visibility of this Popup prop\n */\nfunction CloseButton({updateModal, modalVisible}: CloseProps ){\n    return (\n        <Pressable\n            style={[styles.button, styles.buttonClose]}\n            onPress={() => updateModal(!modalVisible)}\n        >\n            <AntDesign name=\"closecircleo\" size={24} color={colors.dullWhite} />\n        </Pressable>\n    );\n}\n\n/* Props for the exported component from this file (<Popup/>) */\ninterface Props {\n    moreInfo: MovieMoreInfo;\n    modalVisible: boolean;\n    updateModal: (modalVisible: boolean) => void;\n}\n\n/**\n * information (swipe-able) shown within the inner modal \n *\n * @param {MovieMoreInfo} moreInfo - the interface containing all extra information about a \n *                                   movie.\n * @param {function} updateModal - no return, changes the state of the visibility of a modal\n * @param {boolean} modalVisible - the state determining if this Popup is showing. This\n *                                  so that each PopupTile can handle closing the Popup\n *\n * @returns {JSX.Element} - A swippeable list of <PopupTiles/>.\n *                          These are different components in the PopupTiles Directory.\n */\nconst Popup = ({moreInfo, updateModal, modalVisible}: Props) => {\n\n    /* this is an array of functional components, where each index is used as an inner screen */\n    const PopupTiles = [\n        <PopupLeft moreInfo={moreInfo} />,\n        <PopupCenter moreInfo={moreInfo}/>,\n        <PopupRight moreInfo={moreInfo} />,\n    ]\n    \n    /* the X value of that is changed when the user horizontally swipes on the Popup */\n    const scrollX = useRef(new Animated.Value(0)).current;\n\n    /* number that is the width of the Device screen */\n    const {width: windowWidth} = useWindowDimensions();\n\n    return (\n            <View style={styles.container}>\n            <GestureRecognizer\n                onSwipeDown={() => updateModal(!modalVisible)}\n                config={{\n                    velocityThreshold: 0.3,\n                    directionalOffsetThreshold: 300\n                }}>\n                <Modal\n                    animationType=\"slide\"\n                    transparent={true}\n                    visible={modalVisible}\n                    onRequestClose={() => {\n                        updateModal(!modalVisible);\n                }}>\n                    <View style={styles.centeredView}>\n                        <View style={styles.modalView}>\n                            <CloseButton updateModal={updateModal} modalVisible={modalVisible}/>\n                            <SafeAreaView style={styles.widthContainer}>\n                                <ScrollView\n                                    horizontal={true}\n                                    pagingEnabled={true}\n                                    showsHorizontalScrollIndicator={false}\n                                    contentOffset={{x: windowWidth-50, y:0}}\n                                    zoomScale={1}\n                                    scrollEventThrottle={1}\n                                    snapToStart={false}\n                                    snapToEnd={false}\n                                    onScroll={Animated.event([{\n                                        nativeEvent: {\n                                            contentOffset: {\n                                                x: scrollX,\n                                            },\n                                        },\n                                    }],\n                                    {useNativeDriver: false},\n                                    )}\n                                >\n                                    {PopupTiles.map((popupTile, index) => {\n                                        return(\n                                            <Animated.View key={index} style={{width: windowWidth-50, height: \"100%\"}}>\n                                                {popupTile}\n                                            </Animated.View>\n                                        );\n                                    })}\n                                </ScrollView>\n                            </SafeAreaView>\n                            <View style={styles.footer}>\n                                {PopupTiles.map((movieTile, index) => {\n                                    const width = scrollX.interpolate({\n                                        inputRange: [\n                                            windowWidth * (index - 1),\n                                            windowWidth * index,\n                                            windowWidth * (index + 1)\n                                        ],\n                                        outputRange: [8, 16, 8],\n                                        extrapolate: \"clamp\"\n                                    });\n                                    return (\n                                        <Animated.View\n                                            key={index}\n                                            style={[styles.normalDot, { width }]}\n                                        />\n                                    );\n                                })}\n                            </View>\n                        </View>\n                    </View>\n                </Modal>\n                </GestureRecognizer>\n            </View>\n    );\n};\n\n\nconst styles = StyleSheet.create({\n    centeredView: {\n        flex: 1,\n        marginTop: 30,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n    },\n    modalView: {\n        backgroundColor: colors.barDarker,\n        borderRadius: 20,\n        width: \"90%\",\n        height: \"75%\",\n        shadowColor: \"#000\",\n        shadowOffset: {\n            width: 5,\n            height: 5\n        },\n        shadowOpacity: 0.5,\n        shadowRadius: 3,\n        elevation: 5\n    },\n    footer: {\n        color: colors.dullWhite,\n        flexDirection: \"row\",\n        alignSelf: \"center\",\n        justifyContent: \"space-evenly\",\n        width: \"20%\",\n        position: \"absolute\",\n        bottom: 10,\n    },\n    button: {\n        color: colors.dullWhite,\n        borderRadius: 30,\n        padding: 10,\n        backgroundColor: \"transparent\",\n        position: 'absolute',\n        top: -5,\n        right: -5,\n        elevation: 2,\n    },\n    buttonClose: {\n        backgroundColor: \"transparent\",\n    },\n    container: {\n        borderRadius: 15,\n    },\n    widthContainer: {\n        width: \"95%\",\n        height: \"95%\",\n    },\n    normalDot: {\n        height: 8,\n        width: 8,\n        borderRadius: 4,\n        backgroundColor: colors.dullWhite,\n        marginHorizontal: 4\n    },\n    indicatorContainer: {\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        justifyContent: \"center\"\n    }\n});\n\nexport default Popup;\n"]},"metadata":{},"sourceType":"module"}