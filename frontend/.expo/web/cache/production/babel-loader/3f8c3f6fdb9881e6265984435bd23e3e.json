{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _regeneratorRuntime from\"@babel/runtime/regenerator\";import React,{useState}from'react';import Keyboard from\"react-native-web/dist/exports/Keyboard\";import View from\"react-native-web/dist/exports/View\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import SearchBar from\"../components/SearchBar\";import MovieList from\"../components/MovieList\";import axios from'axios';import{requestHelper,setFirstMovieResults}from\"../helpers/Functions\";import Movies from\"../assets/Top250MoviesShort.json\";import colors from\"../helpers/Colors\";import{apiKeys}from\"../helpers/apiKeys\";import{apiUrls}from\"../helpers/apiKeys\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function SearchRoute(){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),query=_useState2[0],setQuery=_useState2[1];var _useState3=useState(setFirstMovieResults(Movies)),_useState4=_slicedToArray(_useState3,2),movieResults=_useState4[0],setMovieResults=_useState4[1];var handleSearch=function handleSearch(newQuery){var strippedQuery;return _regeneratorRuntime.async(function handleSearch$(_context){while(1){switch(_context.prev=_context.next){case 0:Keyboard.dismiss();strippedQuery=newQuery.trim();if(!(strippedQuery==\"\")){_context.next=4;break;}return _context.abrupt(\"return\");case 4:return _context.abrupt(\"return\",strippedQuery);case 5:case\"end\":return _context.stop();}}},null,null,null,Promise);};var searchQuery=function searchQuery(){var reqData,search_name,firstPage,secondPage,result,more,moreArr,i,secondPageMovie;return _regeneratorRuntime.async(function searchQuery$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:Keyboard.dismiss();if(!(query===\"\")){_context2.next=3;break;}return _context2.abrupt(\"return\");case 3:reqData=requestHelper(query);_context2.prev=4;search_name=query.trim();firstPage={method:\"GET\",url:apiUrls.searchMovie,params:{s:search_name,page:\"1\",r:\"json\"},headers:apiKeys.searchMovie};secondPage={method:\"GET\",url:apiUrls.searchMovie,params:{s:search_name,page:\"2\",r:\"json\"},headers:apiKeys.searchMovie};_context2.next=10;return _regeneratorRuntime.awrap(axios.request(firstPage));case 10:result=_context2.sent;if(!(result.data[\"totalResults\"]>11)){_context2.next=17;break;}_context2.next=14;return _regeneratorRuntime.awrap(axios.request(secondPage));case 14:more=_context2.sent;moreArr=more.data[\"Search\"];for(i in moreArr){secondPageMovie=moreArr[i];result.data[\"Search\"].push(secondPageMovie);}case 17:setMovieResults(result.data['Search']);console.log(result.data['Search']);_context2.next=25;break;case 21:_context2.prev=21;_context2.t0=_context2[\"catch\"](4);console.log(_context2.t0);throw new Error(_context2.t0);case 25:_context2.prev=25;console.log(reqData);return _context2.finish(25);case 28:case\"end\":return _context2.stop();}}},null,null,[[4,21,25,28]],Promise);};return _jsxs(View,{style:styles.container,children:[_jsx(SearchBar,{placeholder:\"Search for a movie...\",query:query,updateQuery:function updateQuery(text){return setQuery(text);},searchFunction:function searchFunction(){searchQuery();}}),_jsx(View,{style:styles.results,children:_jsx(MovieList,{movieArray:movieResults})})]});}var styles=StyleSheet.create({container:{flex:1,backgroundColor:colors.black},results:{paddingTop:0,height:'82%'}});","map":{"version":3,"sources":["/home/ndonfris/Projects/ts-movie-list-frontend/frontend/routes/SearchRoute.tsx"],"names":["React","useState","SearchBar","MovieList","axios","requestHelper","setFirstMovieResults","Movies","colors","apiKeys","apiUrls","SearchRoute","query","setQuery","movieResults","setMovieResults","handleSearch","newQuery","Keyboard","dismiss","strippedQuery","trim","searchQuery","reqData","search_name","firstPage","method","url","searchMovie","params","s","page","r","headers","secondPage","request","result","data","more","moreArr","i","secondPageMovie","push","console","log","Error","styles","container","text","results","StyleSheet","create","flex","backgroundColor","black","paddingTop","height"],"mappings":"6HAKA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,KAA8B,OAA9B,C,mLAEA,MAAOC,CAAAA,SAAP,+BACA,MAAOC,CAAAA,SAAP,+BACA,MAAOC,CAAAA,KAAP,KAAwC,OAAxC,CACA,OAAqCC,aAArC,CAAoDC,oBAApD,4BAGA,MAAOC,CAAAA,MAAP,wCACA,MAAOC,CAAAA,MAAP,yBACA,OAASC,OAAT,0BACA,OAASC,OAAT,0B,wFAQA,cAAe,SAASC,CAAAA,WAAT,EAAuB,CAElC,cAA0BV,QAAQ,CAAC,EAAD,CAAlC,wCAAOW,KAAP,eAAcC,QAAd,eAGA,eAAwCZ,QAAQ,CAAUK,oBAAoB,CAACC,MAAD,CAA9B,CAAhD,yCAAOO,YAAP,eAAqBC,eAArB,eAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAAOC,QAAP,0IACjBC,QAAQ,CAACC,OAAT,GACIC,aAFa,CAEGH,QAAQ,CAACI,IAAT,EAFH,MAGbD,aAAa,EAAI,EAHJ,kGAMVA,aANU,uEAArB,CAeA,GAAME,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,8MAChBJ,QAAQ,CAACC,OAAT,GADgB,KAEZP,KAAK,GAAK,EAFE,oEAKZW,OALY,CAKFlB,aAAa,CAACO,KAAD,CALX,kBAONY,WAPM,CAOQZ,KAAK,CAACS,IAAN,EAPR,CAQNI,SARM,CAQM,CACdC,MAAM,CAAE,KADM,CAEdC,GAAG,CAAGjB,OAAO,CAACkB,WAFA,CAGdC,MAAM,CAAE,CAAEC,CAAC,CAAEN,WAAL,CAAkBO,IAAI,CAAE,GAAxB,CAA6BC,CAAC,CAAE,MAAhC,CAHM,CAIdC,OAAO,CAAExB,OAAO,CAACmB,WAJH,CARN,CAcNM,UAdM,CAcO,CACfR,MAAM,CAAE,KADO,CAEfC,GAAG,CAAEjB,OAAO,CAACkB,WAFE,CAGfC,MAAM,CAAE,CAAEC,CAAC,CAAEN,WAAL,CAAkBO,IAAI,CAAE,GAAxB,CAA6BC,CAAC,CAAE,MAAhC,CAHO,CAIfC,OAAO,CAAExB,OAAO,CAACmB,WAJF,CAdP,oDAoBSxB,KAAK,CAAC+B,OAAN,CAAcV,SAAd,CApBT,UAoBNW,MApBM,qBAqBRA,MAAM,CAACC,IAAP,CAAY,cAAZ,EAA8B,EArBtB,+EAsBWjC,KAAK,CAAC+B,OAAN,CAAcD,UAAd,CAtBX,UAsBFI,IAtBE,gBAuBJC,OAvBI,CAuBeD,IAAI,CAACD,IAAL,CAAU,QAAV,CAvBf,CAwBR,IAASG,CAAT,GAAcD,CAAAA,OAAd,CAAuB,CACfE,eADe,CACUF,OAAO,CAACC,CAAD,CADjB,CAEnBJ,MAAM,CAACC,IAAP,CAAY,QAAZ,EAAsBK,IAAtB,CAA2BD,eAA3B,EACH,CA3BO,QA6BZ1B,eAAe,CAACqB,MAAM,CAACC,IAAP,CAAY,QAAZ,CAAD,CAAf,CACAM,OAAO,CAACC,GAAR,CAAYR,MAAM,CAACC,IAAP,CAAY,QAAZ,CAAZ,EA9BY,qFAgCZM,OAAO,CAACC,GAAR,eAhCY,KAiCN,IAAIC,CAAAA,KAAJ,cAjCM,2BAmCZF,OAAO,CAACC,GAAR,CAAYrB,OAAZ,EAnCY,6GAApB,CAuCA,MACI,OAAC,IAAD,EAAM,KAAK,CAAEuB,MAAM,CAACC,SAApB,WACI,KAAC,SAAD,EACI,WAAW,CAAC,uBADhB,CAEI,KAAK,CAAEnC,KAFX,CAGI,WAAW,CAAE,qBAAAoC,IAAI,QAAInC,CAAAA,QAAQ,CAACmC,IAAD,CAAZ,EAHrB,CAII,cAAc,CAAE,yBAAM,CAClB1B,WAAW,GACd,CANL,EADJ,CASI,KAAC,IAAD,EAAM,KAAK,CAAEwB,MAAM,CAACG,OAApB,UACI,KAAC,SAAD,EAAW,UAAU,CAAEnC,YAAvB,EADJ,EATJ,GADJ,CAeH,CAGD,GAAMgC,CAAAA,MAAM,CAAGI,UAAU,CAACC,MAAX,CAAkB,CAC7BJ,SAAS,CAAE,CACPK,IAAI,CAAE,CADC,CAEPC,eAAe,CAAE7C,MAAM,CAAC8C,KAFjB,CADkB,CAK7BL,OAAO,CAAE,CACLM,UAAU,CAAE,CADP,CAELC,MAAM,CAAE,KAFH,CALoB,CAAlB,CAAf","sourcesContent":["/**\n * File:        SearchRoute.tsx\n * Author:      Nick Donfris\n * Created:     01/24/22\n */\nimport React, {useState} from 'react';\nimport {Keyboard, View, StyleSheet} from 'react-native';\nimport SearchBar from '../components/SearchBar';\nimport MovieList from '../components/MovieList';\nimport axios, {AxiosRequestConfig} from 'axios';\nimport {createRequest, HitSearchKey, requestHelper, setFirstMovieResults, SimulateSearch} from '../helpers/Functions';\nimport {Movie, reqBody} from '../helpers/Interfaces';\nimport serverURL from '../helpers/URL';\nimport Movies from '../assets/Top250MoviesShort.json';\nimport colors from '../helpers/Colors';\nimport { apiKeys } from '../helpers/apiKeys';\nimport { apiUrls } from '../helpers/apiKeys';\n\n/*\n * Creates the SearchRoute page. Imports the static file Top250Movies.json, which \n * is just used for pre-query info.\n *\n * @returns {JSX.Element} Search Page rendered by clicking on the bottom bar.\n */\nexport default function SearchRoute() {\n    /* the text that is inputed to the SearchBar component */\n    const [query, setQuery] = useState('');\n\n    /* the list of movies currently rendered on screen as results */\n    const [movieResults, setMovieResults] = useState<Movie[]>(setFirstMovieResults(Movies));\n\n    const handleSearch = async (newQuery: string) : Promise<string> => {\n        Keyboard.dismiss();\n        let strippedQuery = newQuery.trim();\n        if (strippedQuery == \"\") {\n            return;\n        }\n        return strippedQuery;\n    }\n\n    /**\n     * @async searchQuery - uses the query, changed in the SearchBar component. \n     *\n     * @throws {Error} - Typically thrown if server is not connected/running\n     * @returns {Promise<void>} - Array of Movies, found from query\n     */\n    const searchQuery = async () : Promise<Movie[]> => {\n        Keyboard.dismiss();\n        if (query === \"\") {\n            return;\n        }\n        let reqData = requestHelper(query);\n        try {\n            const search_name = query.trim();\n            const firstPage = {\n                method: \"GET\",\n                url:  apiUrls.searchMovie,\n                params: { s: search_name, page: \"1\", r: \"json\" },\n                headers: apiKeys.searchMovie,\n            };\n            const secondPage = {\n                method: \"GET\",\n                url: apiUrls.searchMovie,\n                params: { s: search_name, page: \"2\", r: \"json\" },\n                headers: apiKeys.searchMovie,\n            };\n            const result = await axios.request(firstPage as AxiosRequestConfig);\n            if (result.data[\"totalResults\"] > 11) {\n                const more = await axios.request(secondPage as AxiosRequestConfig);\n                let moreArr: Movie[] = more.data[\"Search\"];\n                for (var i in moreArr) {\n                    let secondPageMovie: Movie = moreArr[i];\n                    result.data[\"Search\"].push(secondPageMovie);\n                }\n            }\n            setMovieResults(result.data['Search']);\n            console.log(result.data['Search']);\n        } catch (e) {\n            console.log(e);\n            throw new Error(e);\n        } finally {\n            console.log(reqData)\n        } \n    };\n\n    return (\n        <View style={styles.container}>\n            <SearchBar\n                placeholder=\"Search for a movie...\"\n                query={query}\n                updateQuery={text => setQuery(text)} \n                searchFunction={() => {\n                    searchQuery();\n                }}\n            />\n            <View style={styles.results}>\n                <MovieList movieArray={movieResults} />\n            </View>\n        </View>\n    )\n}\n\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: colors.black,\n    },\n    results: {\n        paddingTop: 0,\n        height: '82%',\n    }\n\n});\n\n"]},"metadata":{},"sourceType":"module"}