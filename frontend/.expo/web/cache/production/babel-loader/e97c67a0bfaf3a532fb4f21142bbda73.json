{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import*as React from'react';import LogBox from\"react-native-web/dist/exports/LogBox\";import{BottomNavigation}from'react-native-paper';import SearchRoute from\"./routes/SearchRoute\";import BrowseRoute from\"./routes/BrowseRoute\";import SavedRoute from\"./routes/SavedRoute\";import colors from\"./helpers/Colors\";import{jsx as _jsx}from\"react/jsx-runtime\";LogBox.ignoreLogs([\"Syntax Error\",\"JSON Parse error: Unrecognized token\"]);var App=function App(){var _React$useState=React.useState(0),_React$useState2=_slicedToArray(_React$useState,2),index=_React$useState2[0],setIndex=_React$useState2[1];var _React$useState3=React.useState([{key:'search',title:'Search',icon:'movie-search',color:colors.barDarker},{key:'saved',title:'Saved',icon:'content-save-edit-outline',color:colors.barLighter},{key:'browse',title:'Browse',icon:'format-list-numbered',color:colors.barDarker}]),_React$useState4=_slicedToArray(_React$useState3,1),routes=_React$useState4[0];var renderScene=BottomNavigation.SceneMap({search:SearchRoute,saved:SavedRoute,browse:BrowseRoute});return _jsx(BottomNavigation,{navigationState:{index:index,routes:routes},onIndexChange:setIndex,renderScene:renderScene,shifting:true,barStyle:{backgroundColor:colors.black,height:70},inactiveColor:colors.slate,activeColor:colors.dullWhite});};export default App;","map":{"version":3,"sources":["/home/ndonfris/Projects/ts-movie-list-frontend/frontend/App.tsx"],"names":["React","BottomNavigation","SearchRoute","BrowseRoute","SavedRoute","colors","LogBox","ignoreLogs","App","useState","index","setIndex","key","title","icon","color","barDarker","barLighter","routes","renderScene","SceneMap","search","saved","browse","backgroundColor","black","height","slate","dullWhite"],"mappings":"iEAKA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,OAAvB,C,yDAEA,OAASC,gBAAT,KAAiC,oBAAjC,CACA,MAAOC,CAAAA,WAAP,4BACA,MAAOC,CAAAA,WAAP,4BACA,MAAOC,CAAAA,UAAP,2BACA,MAAOC,CAAAA,MAAP,wB,2CASAC,MAAM,CAACC,UAAP,CAAkB,CAAC,cAAD,CAAiB,sCAAjB,CAAlB,EAOA,GAAMC,CAAAA,GAAG,CAAG,QAANA,CAAAA,GAAM,EAAM,CACd,oBAA0BR,KAAK,CAACS,QAAN,CAAe,CAAf,CAA1B,oDAAOC,KAAP,qBAAcC,QAAd,qBAGA,qBAAiBX,KAAK,CAACS,QAAN,CAAe,CAC5B,CAACG,GAAG,CAAE,QAAN,CAAgBC,KAAK,CAAE,QAAvB,CAAiCC,IAAI,CAAE,cAAvC,CAAuDC,KAAK,CAAEV,MAAM,CAACW,SAArE,CAD4B,CAE5B,CAACJ,GAAG,CAAE,OAAN,CAAeC,KAAK,CAAE,OAAtB,CAA+BC,IAAI,CAAE,2BAArC,CAAkEC,KAAK,CAAEV,MAAM,CAACY,UAAhF,CAF4B,CAG5B,CAACL,GAAG,CAAE,QAAN,CAAgBC,KAAK,CAAE,QAAvB,CAAiCC,IAAI,CAAE,sBAAvC,CAA+DC,KAAK,CAAEV,MAAM,CAACW,SAA7E,CAH4B,CAAf,CAAjB,qDAAOE,MAAP,qBAOA,GAAMC,CAAAA,WAAW,CAAGlB,gBAAgB,CAACmB,QAAjB,CAA0B,CAC1CC,MAAM,CAAEnB,WADkC,CAE1CoB,KAAK,CAAElB,UAFmC,CAG1CmB,MAAM,CAAEpB,WAHkC,CAA1B,CAApB,CAOA,MACI,MAAC,gBAAD,EACI,eAAe,CAAE,CAAEO,KAAK,CAALA,KAAF,CAASQ,MAAM,CAANA,MAAT,CADrB,CAEI,aAAa,CAAEP,QAFnB,CAGI,WAAW,CAAEQ,WAHjB,CAII,QAAQ,CAAE,IAJd,CAKI,QAAQ,CAAE,CACNK,eAAe,CAAEnB,MAAM,CAACoB,KADlB,CAENC,MAAM,CAAE,EAFF,CALd,CASI,aAAa,CAAErB,MAAM,CAACsB,KAT1B,CAUI,WAAW,CAAEtB,MAAM,CAACuB,SAVxB,EADJ,CAcH,CAhCD,CAmCA,cAAepB,CAAAA,GAAf","sourcesContent":["/**\n * File:        App.tsx\n * Author:      Nick Donfris\n * Created:     01/23/22\n */\nimport * as React from 'react';\nimport { LogBox } from 'react-native';\nimport { BottomNavigation } from 'react-native-paper';\nimport SearchRoute from './routes/SearchRoute';\nimport BrowseRoute from './routes/BrowseRoute';\nimport SavedRoute from './routes/SavedRoute';\nimport colors from './helpers/Colors';\n\n/*\n * heroku causes expo to throw warnings when I console.log() wrong\n * input from the api. The expo log pop-up can make you have to reinstall\n * the entire application, so I have disabled them. The Syntax Error is\n * also thrown when bad JSON is seen. If their is actually any syntax errors\n * the entire application would crash and red warnings pop-up.\n */\nLogBox.ignoreLogs([\"Syntax Error\", \"JSON Parse error: Unrecognized token\"]);\n\n/* \n * This is where we define our application. This file specifically only handles, the\n * bottom tab bar. It allows the icons on the bottom to be pressed, and once they are\n * pressed on, the UI navigates to the corresponding page.\n */\nconst App = () => {\n    const [index, setIndex] = React.useState(0);\n\n    /* useState hook, defines values for it's inner items */\n    const [routes] = React.useState([\n        {key: 'search', title: 'Search', icon: 'movie-search', color: colors.barDarker },\n        {key: 'saved', title: 'Saved', icon: 'content-save-edit-outline', color: colors.barLighter},\n        {key: 'browse', title: 'Browse', icon: 'format-list-numbered', color: colors.barDarker},\n    ]);\n\n    /* maps the state to the actual page route */\n    const renderScene = BottomNavigation.SceneMap({\n        search: SearchRoute,\n        saved: SavedRoute,\n        browse: BrowseRoute,\n    });\n\n    /* return the bottom tabbar component and render the active page (initializes to Search)  */\n    return (\n        <BottomNavigation\n            navigationState={{ index, routes }}\n            onIndexChange={setIndex}\n            renderScene={renderScene}\n            shifting={true}\n            barStyle={{\n                backgroundColor: colors.black,\n                height: 70,\n            }}\n            inactiveColor={colors.slate}\n            activeColor={colors.dullWhite}\n        />\n    );\n};\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}