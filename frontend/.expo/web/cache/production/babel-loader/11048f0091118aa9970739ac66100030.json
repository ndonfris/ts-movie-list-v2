{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _regeneratorRuntime from\"@babel/runtime/regenerator\";import React,{useState}from'react';import Keyboard from\"react-native-web/dist/exports/Keyboard\";import View from\"react-native-web/dist/exports/View\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import SafeAreaView from\"react-native-web/dist/exports/SafeAreaView\";import MovieList from\"../components/MovieList\";import{requestHelper,setFirstMovieResults}from\"../helpers/Functions\";import serverURL from\"../helpers/URL\";import Movies from\"../assets/Top250MoviesShort.json\";import DropDownPicker from'react-native-dropdown-picker';import colors from\"../helpers/Colors\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function BrowseRoute(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),open=_useState2[0],setOpen=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),value=_useState4[0],setValue=_useState4[1];var _useState5=useState([{label:'Action',value:'Action'},{label:'Adventure',value:'Adventure'},{label:'Animation',value:'Animation'},{label:'Comedy',value:'Comedy'},{label:'Crime',value:'Crime'},{label:'Drama',value:'Drama'},{label:'Family',value:'Family'},{label:'Fantasy',value:'Fantasy'},{label:'History',value:'History'},{label:'Horror',value:'Horror'},{label:'Mystery',value:'Mystery'},{label:'Romance',value:'Romance'},{label:'Science Fiction',value:'Science Fiction'},{label:'Thriller',value:'Thriller'},{label:'War',value:'War'},{label:'Western',value:'Western'}]),_useState6=_slicedToArray(_useState5,2),items=_useState6[0],setItems=_useState6[1];var _useState7=useState(setFirstMovieResults(Movies)),_useState8=_slicedToArray(_useState7,2),movieResults=_useState8[0],setMovieResults=_useState8[1];var searchGenre=function searchGenre(value){var bodyData,reqData,response,body;return _regeneratorRuntime.async(function searchGenre$(_context){while(1){switch(_context.prev=_context.next){case 0:Keyboard.dismiss();console.log(value);if(!(value===\"IMDb top 250\")){_context.next=4;break;}return _context.abrupt(\"return\");case 4:bodyData={\"Genre\":value};reqData=requestHelper(JSON.stringify(bodyData));_context.prev=6;_context.next=9;return _regeneratorRuntime.awrap(fetch(serverURL+\"/browse/genre\",reqData));case 9:response=_context.sent;_context.next=12;return _regeneratorRuntime.awrap(response.json());case 12:body=_context.sent;setMovieResults(body);return _context.abrupt(\"return\",body);case 17:_context.prev=17;_context.t0=_context[\"catch\"](6);console.log(_context.t0);throw new Error(_context.t0);case 21:case\"end\":return _context.stop();}}},null,null,[[6,17]],Promise);};return _jsxs(View,{style:styles.container,children:[_jsx(View,{style:styles.topContainer,children:_jsx(DropDownPicker,{open:open,value:value,items:items,setOpen:setOpen,setValue:setValue,setItems:setItems,onChangeValue:function onChangeValue(){searchGenre(value);},placeholder:\"IMDb Top 250\",theme:\"DARK\",style:styles.topBar,containerStyle:styles.containerStyle,textStyle:styles.text,labelStyle:styles.labelStyle,labelProps:{numberOfLines:1},disabledStyle:{opacity:0.5}})}),_jsx(SafeAreaView,{style:styles.results,children:_jsx(MovieList,{movieArray:movieResults})})]});}var styles=StyleSheet.create({container:{flex:1,backgroundColor:colors.black},topContainer:{marginTop:'15%',alignItems:'center',marginLeft:\"auto\",marginRight:\"auto\",position:'relative',zIndex:100,textAlignVertical:'center',paddingBottom:15},text:{flexGrow:1,textAlignVertical:'center'},containerStyle:{width:325},labelStyle:{width:325},topBar:{paddingTop:15,paddingLeft:20,paddingRight:20,paddingBottom:15,width:325,height:50},results:{height:'82%',position:'relative'}});","map":{"version":3,"sources":["/home/ndonfris/Projects/ts-movie-list-frontend/frontend/routes/BrowseRoute.tsx"],"names":["React","useState","MovieList","requestHelper","setFirstMovieResults","serverURL","Movies","DropDownPicker","colors","BrowseRoute","open","setOpen","value","setValue","label","items","setItems","movieResults","setMovieResults","searchGenre","Keyboard","dismiss","console","log","bodyData","reqData","JSON","stringify","fetch","response","json","body","Error","styles","container","topContainer","topBar","containerStyle","text","labelStyle","numberOfLines","opacity","results","StyleSheet","create","flex","backgroundColor","black","marginTop","alignItems","marginLeft","marginRight","position","zIndex","textAlignVertical","paddingBottom","flexGrow","width","paddingTop","paddingLeft","paddingRight","height"],"mappings":"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","sourcesContent":["/**\n * File:        BrowseRoute.tsx\n * Author:      Nick Donfris\n * Created:     01/24/22\n */\nimport React, {useState} from 'react';\nimport {Keyboard, View, StyleSheet, SafeAreaView} from 'react-native';\nimport MovieList from '../components/MovieList';\nimport {requestHelper, setFirstMovieResults} from '../helpers/Functions';\nimport {Movie, reqBody} from '../helpers/Interfaces';\nimport serverURL from '../helpers/URL';\nimport Movies from '../assets/Top250MoviesShort.json';\nimport DropDownPicker from 'react-native-dropdown-picker';\nimport colors from '../helpers/Colors';\n\n/*\n * Creates a SearchRoute page. Imports the static file Top250Moives.json, which\n * contains the necessary data to render MovieItem's of type Movie. \n *\n * @returns {JSX.Element} - Browse Page rendered by clicking on the bottom bar.\n */\nexport default function BrowseRoute() {\n\n    /* prop that determines if the catagory dropdown is opened  */\n    const [open, setOpen] = useState(false);\n\n    /* individual value of the selected in the items */\n    const [value, setValue] = useState(null);\n\n    /* the Movie genres that are searchable in the database */\n    const [items, setItems] = useState([\n        {label: 'Action', value: 'Action'},\n        {label: 'Adventure', value: 'Adventure'},\n        {label: 'Animation', value: 'Animation'},\n        {label: 'Comedy', value: 'Comedy'},\n        {label: 'Crime', value: 'Crime'},\n        {label: 'Drama', value: 'Drama'},\n        {label: 'Family', value: 'Family'},\n        {label: 'Fantasy', value: 'Fantasy'},\n        {label: 'History', value: 'History'},\n        {label: 'Horror', value: 'Horror'},\n        {label: 'Mystery', value: 'Mystery'},\n        {label: 'Romance', value: 'Romance'},\n        {label: 'Science Fiction', value: 'Science Fiction'},\n        {label: 'Thriller', value: 'Thriller'},\n        {label: 'War', value: 'War'},\n        {label: 'Western', value: 'Western'}\n    ]);\n    \n    /* the results found from the query function */\n    const [movieResults, setMovieResults] = useState<Movie[]>(setFirstMovieResults(Movies));\n\n    /**\n     * @async searchGenre - searches the database for any movie matching the genre\n     *                      passed in as a param. Called when the user selects a \n     *                      item from the dropdown menu.\n     *\n     * @param value - the selected value from the user\n     *\n     * @returns {Promise<Movie[]>} - Returns a promise that resolves an array of movies \n     *                               from the backend, which will then re-render the \n     *                               MovieList component. \n     */\n    const searchGenre = async (value:string) : Promise<Movie[]> => {\n        Keyboard.dismiss();\n        console.log(value);\n        if (value === \"IMDb top 250\") {\n            return;\n        }\n        let bodyData: reqBody<string> = {\n            \"Genre\": value\n        }\n        let reqData = requestHelper(JSON.stringify(bodyData));\n        try {\n            const response = await fetch(serverURL+\"/browse/genre\", reqData);\n            const body = await response.json();\n            setMovieResults(body);\n            return body;\n        } catch (e) {\n            console.log(e);\n            throw new Error(e);\n        }\n    };\n\n    return (\n        <View style={styles.container}>\n            <View style={styles.topContainer}>\n                <DropDownPicker\n                    open={open}\n                    value={value}\n                    items={items}\n                    setOpen={setOpen}\n                    setValue={setValue}\n                    setItems={setItems}\n                    onChangeValue={() => {searchGenre(value)}}\n                    placeholder=\"IMDb Top 250\"\n                    theme=\"DARK\"\n                    style={styles.topBar}\n                    containerStyle={styles.containerStyle}\n                    textStyle={styles.text}\n                    labelStyle={styles.labelStyle}\n                    labelProps={{\n                        numberOfLines: 1\n                    }}\n                    disabledStyle={{\n                        opacity: 0.5\n                    }}\n                />\n            </View>\n            <SafeAreaView style={styles.results}>\n                <MovieList movieArray={movieResults} />\n            </SafeAreaView>\n        </View>\n    )\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: colors.black,\n    },\n    topContainer: {\n        marginTop: '15%',\n        alignItems: 'center',\n        marginLeft: \"auto\",\n        marginRight: \"auto\",\n        position: 'relative',\n        zIndex: 100,\n        textAlignVertical: 'center',\n        paddingBottom: 15,\n    },\n    text: {\n        flexGrow: 1,\n        textAlignVertical: 'center',\n    },\n    containerStyle: {\n        width: 325,\n    },\n    labelStyle: {\n        width: 325,\n    },\n    topBar: {\n        paddingTop: 15,\n        paddingLeft: 20,\n        paddingRight: 20,\n        paddingBottom: 15,\n        width: 325,\n        height: 50,\n    },\n    results: {\n        height: '82%',\n        position: 'relative',\n    }\n});\n\n"]},"metadata":{},"sourceType":"module"}