{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _regeneratorRuntime from\"@babel/runtime/regenerator\";import React,{useState}from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Text from\"react-native-web/dist/exports/Text\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import View from\"react-native-web/dist/exports/View\";import Image from\"react-native-web/dist/exports/Image\";import FlatList from\"react-native-web/dist/exports/FlatList\";import Linking from\"react-native-web/dist/exports/Linking\";import{noStreamingSites,requestHelper}from\"../../helpers/Functions\";import{Ionicons}from'@expo/vector-icons';import serverURL from\"../../helpers/URL\";import colors from\"../../helpers/Colors\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function StreamingList(_ref){var availabileSites=_ref.availabileSites;var renderItem=function renderItem(_ref2){var item=_ref2.item;return item.name===\"Not Found\"?_jsx(View,{style:styles.streaming,children:_jsx(Text,{style:styles.text,children:\" loading... \"})}):_jsx(View,{style:styles.streaming,children:_jsx(TouchableOpacity,{style:styles.iconContainer,onPress:function onPress(){Linking.openURL(item.url);},children:_jsx(Image,{source:{uri:item.icon},style:styles.icon})})});};return _jsx(FlatList,{style:styles.streamingContainer,data:availabileSites,renderItem:renderItem,keyExtractor:function keyExtractor(item){return item.id;}});}var PopupLeft=function PopupLeft(_ref3){var moreInfo=_ref3.moreInfo;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),visible=_useState2[0],setVisible=_useState2[1];var _useState3=useState(noStreamingSites(moreInfo.imdbID)),_useState4=_slicedToArray(_useState3,2),availabileSites=_useState4[0],setAvailibleSites=_useState4[1];var ShowAvailableSites=function ShowAvailableSites(){var reqData,response,obj;return _regeneratorRuntime.async(function ShowAvailableSites$(_context){while(1){switch(_context.prev=_context.next){case 0:reqData=requestHelper(moreInfo.imdbID);console.log(reqData);_context.prev=2;_context.next=5;return _regeneratorRuntime.awrap(fetch(serverURL+'/movie/streaming',reqData));case 5:response=_context.sent;_context.next=8;return _regeneratorRuntime.awrap(response.json());case 8:obj=_context.sent;setAvailibleSites(obj);_context.next=16;break;case 12:_context.prev=12;_context.t0=_context[\"catch\"](2);setAvailibleSites(noStreamingSites(moreInfo.imdbID));console.log(_context.t0);case 16:case\"end\":return _context.stop();}}},null,null,[[2,12]],Promise);};return _jsxs(View,{style:styles.container,children:[_jsxs(Text,{style:styles.title,children:[\" \",moreInfo.Title,\" \"]}),_jsxs(View,{style:styles.topContainer,children:[_jsx(View,{style:styles.streamingTitle,children:_jsx(Text,{style:styles.text,children:\"Availible Streaming Options:\"})}),visible?_jsx(StreamingList,{availabileSites:availabileSites}):_jsx(TouchableOpacity,{style:styles.refresh,onPress:function onPress(){setVisible(!visible);ShowAvailableSites();},children:_jsx(Ionicons,{name:\"ios-refresh-circle-outline\",size:24,color:\"white\"})})]})]});};var styles=StyleSheet.create({container:{flex:1,flexDirection:\"column\",alignItems:'center',justifyContent:'center'},streamingTitle:{top:-20},topContainer:{top:100,minHeight:200},refresh:{borderRadius:20,padding:20,alignItems:\"center\"},button:{alignContent:\"center\",justifyContent:'center',alignItems:\"center\",backgroundColor:\"lightblue\",borderRadius:20,width:\"50%\",height:60},streaming:{flexDirection:\"column\",alignItems:\"center\",justifyContent:\"space-evenly\"},streamingContainer:{},iconContainer:{width:100},icon:{width:100,height:50,resizeMode:\"contain\",tintColor:colors.dullWhite},title:{fontSize:22,fontWeight:\"bold\",color:colors.dullWhite,position:\"absolute\",top:10},text:{color:colors.dullWhite,fontWeight:'bold',justifyContent:'center',textAlign:\"center\"}});export default PopupLeft;","map":{"version":3,"sources":["/home/ndonfris/Projects/ts-movie-list-frontend/frontend/components/PopupPages/PopupLeft.tsx"],"names":["React","useState","noStreamingSites","requestHelper","Ionicons","serverURL","colors","StreamingList","availabileSites","renderItem","item","name","styles","streaming","text","iconContainer","Linking","openURL","url","uri","icon","streamingContainer","id","PopupLeft","moreInfo","visible","setVisible","imdbID","setAvailibleSites","ShowAvailableSites","reqData","console","log","fetch","response","json","obj","container","title","Title","topContainer","streamingTitle","refresh","StyleSheet","create","flex","flexDirection","alignItems","justifyContent","top","minHeight","borderRadius","padding","button","alignContent","backgroundColor","width","height","resizeMode","tintColor","dullWhite","fontSize","fontWeight","color","position","textAlign"],"mappings":"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","sourcesContent":["/**\n * File:        PopupLeft.tsx\n * Author:      Nick Donfris\n * Created:     01/31/22\n */\nimport React, {useState} from 'react';\nimport { StyleSheet, Text, TouchableOpacity, View, Image, FlatList, ListRenderItem, Linking} from \"react-native\";\nimport { MovieMoreInfo, reqBody, StreamWebsite } from '../../helpers/Interfaces';\nimport { createRequest, noStreamingSites, requestHelper } from '../../helpers/Functions';\nimport { Ionicons } from '@expo/vector-icons';\nimport serverURL from '../../helpers/URL';\nimport colors from '../../helpers/Colors';\n\ninterface ShowListProps {\n    availabileSites: StreamWebsite[];\n}\n\n/**\n * This is a functional component that renders the results for the where a movie\n * is streamable on. Backend inserts a StreamWebsite with a name == \"Not Found\"\n * if there are StreamWebsites found.\n *\n * @param {StreamWebsite[]} availabileSites - result from api call of array of websites\n *                                            that a movie is streamable.\n * \n * @returns {JSX.Element} - <FlatList /> of Clickable Websites where you can stream \n *                          a movie.\n */\nfunction StreamingList({availabileSites}: ShowListProps) {\n    \n    /**\n     * Function that returns a singular result from the backend, that is a website\n     * the movie is available to stream on.  One noteable feature implemented \n     * in the ternary operator, is how this function handles displaying \n     * the result list loading.\n     *\n     * @param {StreamWebsite} item - an element in the array of SteamWebsites found \n     *                               from the api.\n     *\n     * @returns {ListRenderItem<StreamWebsite>} - Rendered Item to be used in the\n     *                                            <FlatList/>\n     */\n    const renderItem: ListRenderItem<StreamWebsite> = ({item}) => {\n        return ( \n            item.name === \"Not Found\"\n                ? \n                <View style={styles.streaming}>\n                    <Text style={styles.text}> loading... </Text>\n                </View>\n                :\n                <View style={styles.streaming}>\n                    <TouchableOpacity style={styles.iconContainer}\n                        onPress={() => {Linking.openURL(item.url)}}\n                    >\n                        <Image source={{uri: item.icon}} style={styles.icon}  />\n                    </TouchableOpacity>\n                </View>\n        );\n    }\n\n    return (\n        <FlatList\n            style={styles.streamingContainer}\n            data={availabileSites}\n            renderItem={renderItem}\n            keyExtractor={(item) => item.id}\n        />\n    );\n}\n\n/* the props used in this actual Popup navigation screen */\ninterface Props {\n    moreInfo: MovieMoreInfo;\n}\n\n/**\n * The 0th index of the Popup array of navigation screens. \n *\n * @param {MovieMoreInfo} moreInfo - all info from the backend for an imdbID\n *\n * @returns {JSX.Element} - The left page inside the Popup component list, with\n *                          an inner list of StreamingWebsite interfaces\n */\nconst PopupLeft = ({moreInfo}: Props) => {\n    /* the visibility of the list of available streaming websites */\n    const [visible, setVisible] = useState(false);\n\n    /* the result list from the backend api call of StreamingWebsites \n     * Initial state is set from a helperFunction that sets the default \n     * result with the StreamingWebsite.name field set to \"Not Found\", and\n     * is used in the render item ternary operator, for the FlatList of the\n*    * <StreamingList /> functional component.\n     */\n    const [availabileSites, setAvailibleSites] = useState<StreamWebsite[]>(noStreamingSites(moreInfo.imdbID));\n\n    /**\n     * @async function to call backend and set the StreamWebsites[] state for this\n     * Popup navigation page\n     *\n     * @returns {Promise<void>} - return is void because instead of returning the SteamWebsite[]\n     *                            and storing it in a value, we can make use of the const state\n     *                            for the availabieSites array.\n     */\n    const ShowAvailableSites = async () : Promise<void> => {\n        let reqData = requestHelper(moreInfo.imdbID);\n        console.log(reqData);\n        try {\n            const response = await fetch(serverURL + '/movie/streaming', reqData);\n            const obj = await response.json();\n            setAvailibleSites(obj);\n        } catch (e) {\n            setAvailibleSites(noStreamingSites(moreInfo.imdbID));\n            console.log(e);\n        }\n    }\n    return (\n        <View style={styles.container}>\n        <Text style={styles.title}> {moreInfo.Title} </Text>\n        <View style={styles.topContainer}>\n            <View style={styles.streamingTitle}>\n                <Text style={styles.text}>Availible Streaming Options:</Text>\n            </View>\n            {visible\n                ? <StreamingList availabileSites={availabileSites} />\n                : <TouchableOpacity style={styles.refresh}\n                    onPress={() => {\n                        setVisible(!visible)\n                        ShowAvailableSites()\n                }}>\n                    <Ionicons name=\"ios-refresh-circle-outline\" size={24} color=\"white\" />\n                </TouchableOpacity>\n            }\n            </View>\n        </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        flexDirection: \"column\",\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    streamingTitle: {\n        top: -20,\n    },\n    topContainer: {\n        top: 100,\n        minHeight: 200,\n    },\n    refresh: {\n        borderRadius: 20,\n        padding: 20,\n        alignItems: \"center\",\n    },\n    button: {\n        alignContent: \"center\",\n        justifyContent: 'center',\n        alignItems: \"center\",\n        backgroundColor: \"lightblue\",\n        borderRadius: 20,\n        width: \"50%\",\n        height: 60,\n    },\n    streaming: {\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        justifyContent: \"space-evenly\",\n    },\n    streamingContainer: {\n    },\n    iconContainer: {\n        width: 100,\n    },\n    icon: {\n        width: 100,\n        height: 50,\n        resizeMode: \"contain\",\n        tintColor:  colors.dullWhite\n    },\n    title: {\n        fontSize: 22,\n        fontWeight: \"bold\",\n        color:  colors.dullWhite,\n        position: \"absolute\",\n        top: 10,\n    },\n    text: {\n        color:  colors.dullWhite,\n        fontWeight: 'bold',\n        justifyContent: 'center',\n        textAlign: \"center\",\n    }\n})\n\nexport default PopupLeft;\n"]},"metadata":{},"sourceType":"module"}