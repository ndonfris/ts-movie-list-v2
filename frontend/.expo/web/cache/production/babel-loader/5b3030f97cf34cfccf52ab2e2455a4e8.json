{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _regeneratorRuntime from\"@babel/runtime/regenerator\";import React,{useState}from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Text from\"react-native-web/dist/exports/Text\";import View from\"react-native-web/dist/exports/View\";import Image from\"react-native-web/dist/exports/Image\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import{requestHelper}from\"../../helpers/Functions\";import serverURL from\"../../helpers/URL\";import colors from\"../../helpers/Colors\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var PopupRight=function PopupRight(_ref){var moreInfo=_ref.moreInfo;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),pressed=_useState2[0],setPressed=_useState2[1];var SaveMovie=function SaveMovie(){var bodyData,bodyString,reqData,response,obj;return _regeneratorRuntime.async(function SaveMovie$(_context){while(1){switch(_context.prev=_context.next){case 0:bodyData={\"title\":moreInfo};bodyString=JSON.stringify(bodyData);reqData=requestHelper(bodyString);_context.prev=3;_context.next=6;return _regeneratorRuntime.awrap(fetch(serverURL+'/watch_list/add',reqData));case 6:response=_context.sent;_context.next=9;return _regeneratorRuntime.awrap(response.json());case 9:obj=_context.sent;console.log(obj);_context.next=16;break;case 13:_context.prev=13;_context.t0=_context[\"catch\"](3);console.log(_context.t0);case 16:case\"end\":return _context.stop();}}},null,null,[[3,13]],Promise);};return _jsxs(View,{style:styles.container,children:[_jsx(View,{style:styles.imageContainer,children:_jsx(Image,{source:{uri:moreInfo.Poster},style:styles.image})}),_jsx(View,{style:styles.buttonWrapper,children:_jsx(TouchableOpacity,{style:buttonStyles(pressed).button,onPress:function onPress(){setPressed(true);SaveMovie();},children:pressed?_jsx(Text,{style:buttonStyles(pressed).text,children:\"Added to watch-list\"}):_jsx(Text,{style:buttonStyles(pressed).text,children:\"Add to watch-list\"})})})]});};var buttonStyles=function buttonStyles(pressed){return StyleSheet.create({button:{textAlignVertical:\"center\",height:35,width:280,backgroundColor:pressed?colors.slate:colors.black,borderRadius:20},text:{height:40,width:280,textAlign:\"center\",fontWeight:\"bold\",color:pressed?colors.black:colors.dullWhite,marginTop:10}});};var styles=StyleSheet.create({container:{flex:1,marginTop:20,justifyContent:\"center\"},textWrapper:{textAlignVertical:\"center\",height:35,width:280,backgroundColor:colors.black,borderRadius:20},buttonWrapper:{alignItems:\"center\",justifyContent:\"center\",top:-10},imageContainer:{flexGrow:1,alignItems:\"center\",justifyContent:\"center\"},image:{width:\"90%\",height:\"95%\",borderRadius:20}});export default PopupRight;","map":{"version":3,"sources":["/home/ndonfris/Projects/ts-movie-list-frontend/frontend/components/PopupPages/PopupRight.tsx"],"names":["React","useState","requestHelper","serverURL","colors","PopupRight","moreInfo","pressed","setPressed","SaveMovie","bodyData","bodyString","JSON","stringify","reqData","fetch","response","json","obj","console","log","styles","container","imageContainer","uri","Poster","image","buttonWrapper","buttonStyles","button","text","StyleSheet","create","textAlignVertical","height","width","backgroundColor","slate","black","borderRadius","textAlign","fontWeight","color","dullWhite","marginTop","flex","justifyContent","textWrapper","alignItems","top","flexGrow"],"mappings":"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","sourcesContent":["/**\n * File:        PopupRight.tsx\n * Author:      Nick Donfris\n * Created:     01/31/22\n */\nimport React, {useState} from 'react';\nimport {StyleSheet, Text, View, Image, TouchableOpacity } from \"react-native\";\nimport { requestHelper } from '../../helpers/Functions';\nimport { MovieMoreInfo, reqBody } from '../../helpers/Interfaces';\nimport serverURL from '../../helpers/URL';\nimport colors from '../../helpers/Colors';\n\n/* the MovieMoreInfo prop containing the info pertaining to a Movie  */\ninterface Props {\n    moreInfo: MovieMoreInfo;\n}\n\n/**\n * The 2nd index in the inner navigation screen when the Popup modal is rendered\n * to the display. Renders the poster image for a movie, and a button below it.\n * Clicking anywhere on this prop should add this movie to the bottom tab navigation\n * route for the Watchlist screen.\n *\n * @param {MovieMoreInfo} moreInfo - the availabile information for a movie from \n *                                   the backend\n *\n * @returns {JSX.Element} - The right page inside the Popup component list.\n */\nconst PopupRight = ({moreInfo}: Props) => {\n\n    const [pressed, setPressed] = useState(false);\n\n    /**\n     * @async Function that is called when a movieTile is selected. \n     *        Returns a unresolved promise. Sets the moreInfo on successful\n     *        api call.\n     *        \n     * @returns {Promise<void>} - instead of returning the objects, it sets them\n     *                            and makes use of global variables.\n     */\n    const SaveMovie = async (): Promise<void> => {\n\n        const bodyData: reqBody<MovieMoreInfo> = {\n            \"title\": moreInfo\n        };\n        let bodyString = JSON.stringify(bodyData);\n        const reqData = requestHelper(bodyString);\n        try {\n            const response = await fetch(serverURL + '/watch_list/add', reqData);\n            const obj = await response.json();\n            console.log(obj);\n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n    return (\n        <View style={styles.container}>\n            <View style={styles.imageContainer}>\n                <Image source={{uri: moreInfo.Poster}} style={styles.image} />\n            </View>\n            <View style={styles.buttonWrapper}>\n                <TouchableOpacity \n                    style={buttonStyles(pressed).button} \n                    onPress={() => {\n                        setPressed(true);\n                        SaveMovie();\n                    }}>\n                    {pressed\n                        ? <Text style={buttonStyles(pressed).text}>Added to watch-list</Text>\n                        : <Text style={buttonStyles(pressed).text}>Add to watch-list</Text>\n                    }\n                </TouchableOpacity>\n            </View> \n        </View>\n    );\n};\n\nconst buttonStyles = (pressed : boolean) => StyleSheet.create({\n    button: {\n        textAlignVertical: \"center\",\n        height: 35,\n        width: 280,\n        backgroundColor: pressed ? colors.slate : colors.black,\n        borderRadius: 20,\n    },\n    text: {\n        height: 40,\n        width: 280,\n        textAlign: \"center\",\n        fontWeight: \"bold\",\n        color: pressed ? colors.black : colors.dullWhite,\n        marginTop: 10,\n    }\n});\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        marginTop: 20,\n        justifyContent: \"center\",\n    },\n    textWrapper: {\n        textAlignVertical: \"center\",\n        height: 35,\n        width: 280,\n        backgroundColor: colors.black,\n        borderRadius: 20,\n    },\n    buttonWrapper: {\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        top: -10,\n    },\n    imageContainer: {\n        flexGrow: 1,\n        alignItems: \"center\",\n        justifyContent: \"center\",\n    },\n    image: {\n        width: \"90%\",\n        height: \"95%\",\n        borderRadius: 20,\n    }\n})\n\nexport default PopupRight;\n"]},"metadata":{},"sourceType":"module"}