{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _regeneratorRuntime from\"@babel/runtime/regenerator\";import React,{useState}from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Text from\"react-native-web/dist/exports/Text\";import View from\"react-native-web/dist/exports/View\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import{requestHelper}from\"../helpers/Functions\";import serverURL from\"../helpers/URL\";import colors from\"../helpers/Colors\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var RemoveTile=function RemoveTile(_ref){var movie=_ref.movie;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),removedMovie=_useState2[0],setRemovedMovie=_useState2[1];var RemoveMovie=function RemoveMovie(){var bodyData,reqData,response,obj;return _regeneratorRuntime.async(function RemoveMovie$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!(movie.imdbID===\"\"||movie.imdbID===undefined||movie.imdbID===null)){_context.next=2;break;}return _context.abrupt(\"return\",Promise.resolve());case 2:bodyData={\"title\":movie.imdbID};reqData=requestHelper(JSON.stringify(bodyData));_context.prev=4;_context.next=7;return _regeneratorRuntime.awrap(fetch(serverURL+'/watch_list/remove',reqData));case 7:response=_context.sent;_context.next=10;return _regeneratorRuntime.awrap(response.json());case 10:obj=_context.sent;console.log(obj);_context.next=17;break;case 14:_context.prev=14;_context.t0=_context[\"catch\"](4);console.log(_context.t0);case 17:case\"end\":return _context.stop();}}},null,null,[[4,14]],Promise);};return _jsx(View,{style:styles.outer,children:_jsx(TouchableOpacity,{style:removedStyles(removedMovie).buttonContainer,activeOpacity:0.2,onPress:function onPress(){RemoveMovie();setRemovedMovie(true);},children:_jsxs(View,{style:removedStyles(removedMovie).buttonContainer,children:[_jsx(View,{style:styles.topText,children:removedMovie?_jsx(Text,{style:removedStyles(removedMovie).removedText,children:\"REMOVED\"}):_jsx(Text,{style:removedStyles(removedMovie).removedText,children:\"Press to Remove\"})}),_jsx(View,{style:styles.middleText,children:_jsx(Text,{style:removedStyles(removedMovie).text,children:movie.Title})})]})})});};var removedStyles=function removedStyles(removedMovie){return StyleSheet.create({buttonContainer:{backgroundColor:removedMovie?colors.barDarker:colors.barLighter,color:removedMovie?\"black\":\"white\",borderRadius:10,width:120,height:120,alignItems:'center',textAlign:'center'},text:{alignItems:'center',textAlign:'center',color:removedMovie?\"red\":colors.dullWhite},removedText:{alignItems:'center',textAlign:'center',color:removedMovie?\"red\":colors.dullWhite,fontWeight:'bold'}});};var styles=StyleSheet.create({outer:{flex:1,alignItems:'center',padding:10},container:{backgroundColor:'red',borderRadius:10,width:120,height:120,alignItems:'center',textAlign:'center',color:'#fff'},topText:{paddingTop:5,paddingBottom:5,justifyContent:'space-around'},middleText:{alignItems:'center',textAlign:'center',textAlignVertical:'center',alignSelf:'center',justifyContent:'space-around',paddingTop:5},buttonContainer:{alignItems:'center'}});export default RemoveTile;","map":{"version":3,"sources":["/home/ndonfris/Projects/ts-movie-list-frontend/frontend/components/RemoveTile.tsx"],"names":["React","useState","requestHelper","serverURL","colors","RemoveTile","movie","removedMovie","setRemovedMovie","RemoveMovie","imdbID","undefined","Promise","resolve","bodyData","reqData","JSON","stringify","fetch","response","json","obj","console","log","styles","outer","removedStyles","buttonContainer","topText","removedText","middleText","text","Title","StyleSheet","create","backgroundColor","barDarker","barLighter","color","borderRadius","width","height","alignItems","textAlign","dullWhite","fontWeight","flex","padding","container","paddingTop","paddingBottom","justifyContent","textAlignVertical","alignSelf"],"mappings":"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","sourcesContent":["/**\n * File:        RemoveTile.tsx\n * Author:      Nick Donfris\n * Created:     01/24/22\n */\nimport React, {useState} from 'react';\nimport {StyleSheet, Text, View, TouchableOpacity} from 'react-native';\nimport {Movie, MovieMoreInfo, reqBody} from '../helpers/Interfaces';\nimport {createRequest, failedMovieMoreInfo, requestHelper} from '../helpers/Functions';\nimport serverURL from '../helpers/URL';\nimport colors from '../helpers/Colors';\n\n\ninterface Props {\n    movie: Movie;\n}\n\n/**\n * A MovieTile, which is a clickable component, which can render more information about the MovieTile\n *\n * @param {Movie} movie - the Movie interface which contains strings that correlate to the necessary details for a movie\n * @returns {JSX.Element} - the tile shown for a Movie, and the set of states that are coupled to rendering more information about a tile. \n */\nconst RemoveTile = ({movie}: Props) => {\n    const [removedMovie, setRemovedMovie] = useState(false);\n    /**\n     * @async Function that is called when a movieTile is selected. \n     *        Returns a unresolved promise. Sets the moreInfo on successful\n     *        api call.\n     *        \n     * @returns {Promise<void>} - instead of returning the objects, it sets them\n     *                            and makes use of global variables.\n     */\n    const RemoveMovie = async () : Promise<void> => {\n        if (movie.imdbID === \"\" || movie.imdbID === undefined || movie.imdbID === null) {\n            return Promise.resolve();\n        }\n        let bodyData : reqBody<string> = { \"title\": movie.imdbID };\n        let reqData = requestHelper(JSON.stringify(bodyData));\n        try {\n            const response = await fetch(serverURL + '/watch_list/remove', reqData);\n            const obj = await response.json();\n            console.log(obj);\n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n    return (\n        <View style={styles.outer}>\n            <TouchableOpacity\n                style={removedStyles(removedMovie).buttonContainer}\n                activeOpacity={0.2}\n                onPress={() => {\n                    RemoveMovie();\n                    setRemovedMovie(true);\n                }}>\n                <View style={removedStyles(removedMovie).buttonContainer}>\n                    <View style={styles.topText}>\n                        {removedMovie\n                            ?<Text style={removedStyles(removedMovie).removedText}>REMOVED</Text>\n                            :<Text style={removedStyles(removedMovie).removedText}>Press to Remove</Text>\n                        }\n                    </View> \n                    <View style={styles.middleText}>\n                        <Text style={removedStyles(removedMovie).text}>{movie.Title}</Text>\n                    </View>\n                </View>\n            </TouchableOpacity> \n        </View>\n    );\n}\n\nconst removedStyles = (removedMovie : boolean) => StyleSheet.create({\n    buttonContainer: {\n        backgroundColor: removedMovie ? colors.barDarker : colors.barLighter,\n        color: removedMovie ? \"black\" : \"white\",\n        borderRadius: 10,\n        width: 120,\n        height: 120,\n        alignItems: 'center',\n        textAlign: 'center',\n    },\n    text: {\n        alignItems: 'center',\n        textAlign: 'center',\n        color: removedMovie ? \"red\" : colors.dullWhite,\n    },\n    removedText: {\n        alignItems: 'center',\n        textAlign: 'center',\n        color: removedMovie ? \"red\" : colors.dullWhite,\n        fontWeight: 'bold'\n    }\n});\n\n\nconst styles = StyleSheet.create({\n    outer: {\n        flex: 1,\n        alignItems: 'center',\n        padding: 10,\n    },\n    container: {\n        backgroundColor: 'red',\n        borderRadius: 10,\n        width: 120,\n        height: 120,\n        alignItems: 'center',\n        textAlign: 'center',\n        color: '#fff'\n    },\n    topText: {\n        paddingTop: 5,\n        paddingBottom: 5,\n        justifyContent: 'space-around'\n    },\n    middleText: {\n        alignItems: 'center',\n        textAlign: 'center',\n        textAlignVertical: 'center',\n        alignSelf: 'center',\n        justifyContent: 'space-around',\n        paddingTop: 5\n    },\n    buttonContainer: {\n        alignItems: 'center',\n    }\n});\n\nexport default RemoveTile;\n"]},"metadata":{},"sourceType":"module"}