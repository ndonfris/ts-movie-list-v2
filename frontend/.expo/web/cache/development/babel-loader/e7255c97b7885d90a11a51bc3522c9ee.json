{"ast":null,"code":"import React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport OpenLinks from \"../OpenLinks\";\nimport ReviewList from \"../ReviewList\";\nimport colors from \"../../helpers/Colors\";\nimport { getBadRatings } from \"../../helpers/Functions\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction InLineText(_ref) {\n  var titleText = _ref.titleText,\n      infoText = _ref.infoText;\n  return _jsxs(View, {\n    style: styles.textInline,\n    children: [_jsxs(Text, {\n      style: styles.smallTitle,\n      children: [titleText, \":\"]\n    }), _jsx(Text, {\n      style: styles.smallText,\n      children: infoText\n    })]\n  });\n}\n\n;\n\nvar PopupCenter = function PopupCenter(_ref2) {\n  var moreInfo = _ref2.moreInfo;\n  var ratings = getBadRatings();\n\n  if (moreInfo.Ratings && moreInfo.Ratings.length) {\n    ratings = moreInfo.Ratings;\n  }\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(View, {\n      style: styles.imageContainer,\n      children: _jsx(Image, {\n        source: {\n          uri: moreInfo.Poster\n        },\n        style: styles.image\n      })\n    }), _jsxs(View, {\n      style: styles.topWrapper,\n      children: [_jsx(Text, {\n        style: styles.title,\n        children: moreInfo.Title\n      }), _jsx(InLineText, {\n        titleText: \"Director\",\n        infoText: moreInfo.Director\n      }), _jsx(InLineText, {\n        titleText: \"Starring\",\n        infoText: moreInfo.Actors\n      }), _jsx(InLineText, {\n        titleText: \"Genre\",\n        infoText: moreInfo.Genre\n      }), _jsx(InLineText, {\n        titleText: \"Released\",\n        infoText: moreInfo.Released\n      }), _jsx(InLineText, {\n        titleText: \"Runtime\",\n        infoText: moreInfo.Runtime\n      }), _jsx(InLineText, {\n        titleText: \"Rating\",\n        infoText: moreInfo.Rated\n      }), _jsx(InLineText, {\n        titleText: \"Awards\",\n        infoText: moreInfo.Awards\n      })]\n    }), _jsxs(View, {\n      style: styles.middleWrapper,\n      children: [_jsx(Text, {\n        style: styles.mediumTitle,\n        children: \"Plot: \"\n      }), _jsx(ScrollView, {\n        style: styles.scroll,\n        fadingEdgeLength: 1,\n        children: _jsx(Text, {\n          style: styles.plot,\n          children: moreInfo.Plot\n        })\n      }), _jsx(ReviewList, {\n        Ratings: ratings,\n        Title: moreInfo.Title\n      })]\n    }), _jsx(View, {\n      style: styles.bottomWrapper,\n      children: _jsx(OpenLinks, {\n        title: moreInfo.Title\n      })\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    height: \"100%\"\n  },\n  title: {\n    fontSize: 16,\n    fontWeight: \"bold\",\n    paddingBottom: 5,\n    color: colors.dullWhite\n  },\n  scroll: {\n    maxHeight: 125\n  },\n  smallText: {\n    fontSize: 10,\n    marginTop: 3,\n    paddingRight: 30,\n    color: colors.dullWhite\n  },\n  smallTitle: {\n    fontSize: 13,\n    fontWeight: \"bold\",\n    paddingRight: 5,\n    color: colors.dullWhite\n  },\n  mediumTitle: {\n    fontSize: 14,\n    fontWeight: \"bold\",\n    color: colors.dullWhite\n  },\n  imageContainer: {\n    borderRadius: 20,\n    top: 15,\n    left: 10,\n    position: 'absolute'\n  },\n  image: {\n    width: 100,\n    height: 200,\n    borderRadius: 5\n  },\n  plot: {\n    fontSize: 14,\n    paddingTop: 10,\n    minHeight: 80,\n    paddingLeft: 0,\n    paddingRight: 15,\n    color: colors.dullWhite\n  },\n  textInline: {\n    flexDirection: \"row\",\n    justifyContent: \"flex-start\",\n    paddingBottom: 5\n  },\n  topWrapper: {\n    flexDirection: \"column\",\n    marginLeft: 118,\n    top: 10,\n    paddingRight: 10,\n    minHeight: 210,\n    width: \"55%\"\n  },\n  middleWrapper: {\n    paddingTop: 20,\n    paddingLeft: 10\n  },\n  bottomWrapper: {\n    alignSelf: \"center\",\n    bottom: 15\n  }\n});\nexport default PopupCenter;","map":{"version":3,"sources":["/home/ndonfris/Projects/ts-movie-list-frontend/frontend/components/PopupPages/PopupCenter.tsx"],"names":["React","OpenLinks","ReviewList","colors","getBadRatings","InLineText","titleText","infoText","styles","textInline","smallTitle","smallText","PopupCenter","moreInfo","ratings","Ratings","length","container","imageContainer","uri","Poster","image","topWrapper","title","Title","Director","Actors","Genre","Released","Runtime","Rated","Awards","middleWrapper","mediumTitle","scroll","plot","Plot","bottomWrapper","StyleSheet","create","flex","height","fontSize","fontWeight","paddingBottom","color","dullWhite","maxHeight","marginTop","paddingRight","borderRadius","top","left","position","width","paddingTop","minHeight","paddingLeft","flexDirection","justifyContent","marginLeft","alignSelf","bottom"],"mappings":"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","sourcesContent":["/**\n * File:        PopupCenter.tsx\n * Author:      Nick Donfris\n * Created:     01/31/22\n */\nimport React, {useState} from 'react';\nimport { StyleSheet, Text, View, Image, ScrollView } from \"react-native\";\nimport OpenLinks from '../OpenLinks';\nimport ReviewList from '../ReviewList';\nimport {MovieMoreInfo, Rating} from '../../helpers/Interfaces';\nimport colors from '../../helpers/Colors';\nimport {getBadRatings} from '../../helpers/Functions';\n\n\n/* strings used to help display the backend api data */\ninterface InLineTextProps {\n    titleText: string;\n    infoText: string;\n}\n\n/**\n * This is a functional component that just allows significant, decomposition\n * in the PopupCenter component. It styles text to have a bold title, and \n * have the corresponding infomation vertically aligned next to it.\n * \n *\n * @param {string} titleText - the string of the title\n * @param {string} infoText - the string for the api result matching the title\n *\n * @returns {JSX.Element} - Vertically aligned component of different sized text\n *                          to render most of the movie information.\n */\nfunction InLineText({titleText, infoText}: InLineTextProps) {\n    return (\n        <View style={styles.textInline}>\n            <Text style={styles.smallTitle}>{titleText}:</Text>\n            <Text style={styles.smallText}>{infoText}</Text>\n        </View>\n    )\n}\n\n/* the props for the PopupCenter component */\ninterface Props {\n    moreInfo: MovieMoreInfo\n};\n\n/**\n * PopupCenter is the first inner navigation screen when the Popup modal is rendered \n * and contains the most information about a Movie\n *\n * @param {MovieMoreInfo} moreInfo - the resolved callback from the backend when an\n *                                   imdbID is searched.\n *\n * @returns {JSX.Element} - The middle page inside the Popup component list.\n */\nconst PopupCenter = ({moreInfo}: Props) => {\n    var ratings = getBadRatings() as Rating[];\n    if (moreInfo.Ratings && moreInfo.Ratings.length) {\n        ratings = moreInfo.Ratings;\n    }\n    return (\n        <View style={styles.container}>\n            <View style={styles.imageContainer}>\n                <Image source={{uri: moreInfo.Poster}} style={styles.image} />\n            </View>\n            <View style={styles.topWrapper}>\n                <Text style={styles.title}>{moreInfo.Title}</Text>\n                <InLineText titleText=\"Director\" infoText={moreInfo.Director} />\n                <InLineText titleText=\"Starring\" infoText={moreInfo.Actors} />\n                <InLineText titleText=\"Genre\" infoText={moreInfo.Genre} />\n                <InLineText titleText=\"Released\" infoText={moreInfo.Released} />\n                <InLineText titleText=\"Runtime\" infoText={moreInfo.Runtime} />\n                <InLineText titleText=\"Rating\" infoText={moreInfo.Rated} />\n                <InLineText titleText=\"Awards\" infoText={moreInfo.Awards} />\n            </View>\n            <View style={styles.middleWrapper}>\n                <Text style={styles.mediumTitle}>Plot: </Text>\n                <ScrollView style={styles.scroll} fadingEdgeLength={1}>\n                    <Text style={styles.plot}>{moreInfo.Plot}</Text>\n                </ScrollView>\n                <ReviewList Ratings={ratings} Title={moreInfo.Title} />\n            </View>\n            <View style={styles.bottomWrapper} >\n                <OpenLinks title={moreInfo.Title} />\n            </View>\n        </View>\n    )\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        height: \"100%\",\n    },\n    title: {\n        fontSize: 16,\n        fontWeight: \"bold\",\n        paddingBottom: 5,\n        color: colors.dullWhite\n    },\n    scroll: {\n        maxHeight: 125,\n    },\n    smallText: {\n        fontSize: 10,\n        marginTop: 3,\n        paddingRight: 30,\n        color: colors.dullWhite\n    },\n    smallTitle: {\n        fontSize: 13,\n        fontWeight: \"bold\",\n        paddingRight: 5,\n        color: colors.dullWhite\n    },\n    mediumTitle: {\n        fontSize: 14,\n        fontWeight: \"bold\",\n        color: colors.dullWhite\n    },\n    imageContainer: {\n        borderRadius: 20,\n        top: 15,\n        left: 10,\n        position: 'absolute',\n    },\n    image: {\n        width: 100,\n        height: 200,\n        borderRadius: 5,\n    },\n    plot: {\n        fontSize: 14,\n        paddingTop: 10,\n        minHeight: 80,\n        paddingLeft: 0,\n        paddingRight: 15,\n        color: colors.dullWhite\n    },\n    textInline: {\n        flexDirection: \"row\",\n        justifyContent: \"flex-start\",\n        paddingBottom: 5, \n    },\n    topWrapper: {\n        flexDirection: \"column\",\n        marginLeft: 118,\n        top: 10,\n        paddingRight: 10,\n        minHeight: 210,\n        width: \"55%\",\n    },\n    middleWrapper: {\n        paddingTop: 20,\n        paddingLeft: 10,\n    },\n    bottomWrapper: {\n        alignSelf: \"center\",\n        bottom: 15,\n    }\n});\n\nexport default PopupCenter;\n"]},"metadata":{},"sourceType":"module"}