{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { requestHelper } from \"../../helpers/Functions\";\nimport serverURL from \"../../helpers/URL\";\nimport colors from \"../../helpers/Colors\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar PopupRight = function PopupRight(_ref) {\n  var moreInfo = _ref.moreInfo;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      pressed = _useState2[0],\n      setPressed = _useState2[1];\n\n  var SaveMovie = function SaveMovie() {\n    var bodyData, bodyString, reqData, response, obj;\n    return _regeneratorRuntime.async(function SaveMovie$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            bodyData = {\n              \"title\": moreInfo\n            };\n            bodyString = JSON.stringify(bodyData);\n            reqData = requestHelper(bodyString);\n            _context.prev = 3;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(fetch(serverURL + '/watch_list/add', reqData));\n\n          case 6:\n            response = _context.sent;\n            _context.next = 9;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 9:\n            obj = _context.sent;\n            console.log(obj);\n            _context.next = 16;\n            break;\n\n          case 13:\n            _context.prev = 13;\n            _context.t0 = _context[\"catch\"](3);\n            console.log(_context.t0);\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[3, 13]], Promise);\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(View, {\n      style: styles.imageContainer,\n      children: _jsx(Image, {\n        source: {\n          uri: moreInfo.Poster\n        },\n        style: styles.image\n      })\n    }), _jsx(View, {\n      style: styles.buttonWrapper,\n      children: _jsx(TouchableOpacity, {\n        style: buttonStyles(pressed).button,\n        onPress: function onPress() {\n          setPressed(true);\n          SaveMovie();\n        },\n        children: pressed ? _jsx(Text, {\n          style: buttonStyles(pressed).text,\n          children: \"Added to watch-list\"\n        }) : _jsx(Text, {\n          style: buttonStyles(pressed).text,\n          children: \"Add to watch-list\"\n        })\n      })\n    })]\n  });\n};\n\nvar buttonStyles = function buttonStyles(pressed) {\n  return StyleSheet.create({\n    button: {\n      textAlignVertical: \"center\",\n      height: 35,\n      width: 280,\n      backgroundColor: pressed ? colors.slate : colors.black,\n      borderRadius: 20\n    },\n    text: {\n      height: 40,\n      width: 280,\n      textAlign: \"center\",\n      fontWeight: \"bold\",\n      color: pressed ? colors.black : colors.dullWhite,\n      marginTop: 10\n    }\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: 20,\n    justifyContent: \"center\"\n  },\n  textWrapper: {\n    textAlignVertical: \"center\",\n    height: 35,\n    width: 280,\n    backgroundColor: colors.black,\n    borderRadius: 20\n  },\n  buttonWrapper: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    top: -10\n  },\n  imageContainer: {\n    flexGrow: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  image: {\n    width: \"90%\",\n    height: \"95%\",\n    borderRadius: 20\n  }\n});\nexport default PopupRight;","map":{"version":3,"sources":["/home/ndonfris/Projects/ts-movie-list-frontend/frontend/components/PopupPages/PopupRight.tsx"],"names":["React","useState","requestHelper","serverURL","colors","PopupRight","moreInfo","pressed","setPressed","SaveMovie","bodyData","bodyString","JSON","stringify","reqData","fetch","response","json","obj","console","log","styles","container","imageContainer","uri","Poster","image","buttonWrapper","buttonStyles","button","text","StyleSheet","create","textAlignVertical","height","width","backgroundColor","slate","black","borderRadius","textAlign","fontWeight","color","dullWhite","marginTop","flex","justifyContent","textWrapper","alignItems","top","flexGrow"],"mappings":";;AAKA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;;;;AAEA,SAASC,aAAT;AAEA,OAAOC,SAAP;AACA,OAAOC,MAAP;;;;AAkBA,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAAuB;AAAA,MAArBC,QAAqB,QAArBA,QAAqB;;AAEtC,kBAA8BL,QAAQ,CAAC,KAAD,CAAtC;AAAA;AAAA,MAAOM,OAAP;AAAA,MAAgBC,UAAhB;;AAUA,MAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAERC,YAAAA,QAFQ,GAE2B;AACrC,uBAASJ;AAD4B,aAF3B;AAKVK,YAAAA,UALU,GAKGC,IAAI,CAACC,SAAL,CAAeH,QAAf,CALH;AAMRI,YAAAA,OANQ,GAMEZ,aAAa,CAACS,UAAD,CANf;AAAA;AAAA;AAAA,6CAQaI,KAAK,CAACZ,SAAS,GAAG,iBAAb,EAAgCW,OAAhC,CARlB;;AAAA;AAQJE,YAAAA,QARI;AAAA;AAAA,6CASQA,QAAQ,CAACC,IAAT,EATR;;AAAA;AASJC,YAAAA,GATI;AAUVC,YAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AAVU;AAAA;;AAAA;AAAA;AAAA;AAYVC,YAAAA,OAAO,CAACC,GAAR;;AAZU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAgBA,SACI,MAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA,eACI,KAAC,IAAD;AAAM,MAAA,KAAK,EAAED,MAAM,CAACE,cAApB;AAAA,gBACI,KAAC,KAAD;AAAO,QAAA,MAAM,EAAE;AAACC,UAAAA,GAAG,EAAElB,QAAQ,CAACmB;AAAf,SAAf;AAAuC,QAAA,KAAK,EAAEJ,MAAM,CAACK;AAArD;AADJ,MADJ,EAII,KAAC,IAAD;AAAM,MAAA,KAAK,EAAEL,MAAM,CAACM,aAApB;AAAA,gBACI,KAAC,gBAAD;AACI,QAAA,KAAK,EAAEC,YAAY,CAACrB,OAAD,CAAZ,CAAsBsB,MADjC;AAEI,QAAA,OAAO,EAAE,mBAAM;AACXrB,UAAAA,UAAU,CAAC,IAAD,CAAV;AACAC,UAAAA,SAAS;AACZ,SALL;AAAA,kBAMKF,OAAO,GACF,KAAC,IAAD;AAAM,UAAA,KAAK,EAAEqB,YAAY,CAACrB,OAAD,CAAZ,CAAsBuB,IAAnC;AAAA;AAAA,UADE,GAEF,KAAC,IAAD;AAAM,UAAA,KAAK,EAAEF,YAAY,CAACrB,OAAD,CAAZ,CAAsBuB,IAAnC;AAAA;AAAA;AARV;AADJ,MAJJ;AAAA,IADJ;AAoBH,CAhDD;;AAkDA,IAAMF,YAAY,GAAG,SAAfA,YAAe,CAACrB,OAAD;AAAA,SAAuBwB,UAAU,CAACC,MAAX,CAAkB;AAC1DH,IAAAA,MAAM,EAAE;AACJI,MAAAA,iBAAiB,EAAE,QADf;AAEJC,MAAAA,MAAM,EAAE,EAFJ;AAGJC,MAAAA,KAAK,EAAE,GAHH;AAIJC,MAAAA,eAAe,EAAE7B,OAAO,GAAGH,MAAM,CAACiC,KAAV,GAAkBjC,MAAM,CAACkC,KAJ7C;AAKJC,MAAAA,YAAY,EAAE;AALV,KADkD;AAQ1DT,IAAAA,IAAI,EAAE;AACFI,MAAAA,MAAM,EAAE,EADN;AAEFC,MAAAA,KAAK,EAAE,GAFL;AAGFK,MAAAA,SAAS,EAAE,QAHT;AAIFC,MAAAA,UAAU,EAAE,MAJV;AAKFC,MAAAA,KAAK,EAAEnC,OAAO,GAAGH,MAAM,CAACkC,KAAV,GAAkBlC,MAAM,CAACuC,SALrC;AAMFC,MAAAA,SAAS,EAAE;AANT;AARoD,GAAlB,CAAvB;AAAA,CAArB;;AAkBA,IAAMvB,MAAM,GAAGU,UAAU,CAACC,MAAX,CAAkB;AAC7BV,EAAAA,SAAS,EAAE;AACPuB,IAAAA,IAAI,EAAE,CADC;AAEPD,IAAAA,SAAS,EAAE,EAFJ;AAGPE,IAAAA,cAAc,EAAE;AAHT,GADkB;AAM7BC,EAAAA,WAAW,EAAE;AACTd,IAAAA,iBAAiB,EAAE,QADV;AAETC,IAAAA,MAAM,EAAE,EAFC;AAGTC,IAAAA,KAAK,EAAE,GAHE;AAITC,IAAAA,eAAe,EAAEhC,MAAM,CAACkC,KAJf;AAKTC,IAAAA,YAAY,EAAE;AALL,GANgB;AAa7BZ,EAAAA,aAAa,EAAE;AACXqB,IAAAA,UAAU,EAAE,QADD;AAEXF,IAAAA,cAAc,EAAE,QAFL;AAGXG,IAAAA,GAAG,EAAE,CAAC;AAHK,GAbc;AAkB7B1B,EAAAA,cAAc,EAAE;AACZ2B,IAAAA,QAAQ,EAAE,CADE;AAEZF,IAAAA,UAAU,EAAE,QAFA;AAGZF,IAAAA,cAAc,EAAE;AAHJ,GAlBa;AAuB7BpB,EAAAA,KAAK,EAAE;AACHS,IAAAA,KAAK,EAAE,KADJ;AAEHD,IAAAA,MAAM,EAAE,KAFL;AAGHK,IAAAA,YAAY,EAAE;AAHX;AAvBsB,CAAlB,CAAf;AA8BA,eAAelC,UAAf","sourcesContent":["/**\n * File:        PopupRight.tsx\n * Author:      Nick Donfris\n * Created:     01/31/22\n */\nimport React, {useState} from 'react';\nimport {StyleSheet, Text, View, Image, TouchableOpacity } from \"react-native\";\nimport { requestHelper } from '../../helpers/Functions';\nimport { MovieMoreInfo, reqBody } from '../../helpers/Interfaces';\nimport serverURL from '../../helpers/URL';\nimport colors from '../../helpers/Colors';\n\n/* the MovieMoreInfo prop containing the info pertaining to a Movie  */\ninterface Props {\n    moreInfo: MovieMoreInfo;\n}\n\n/**\n * The 2nd index in the inner navigation screen when the Popup modal is rendered\n * to the display. Renders the poster image for a movie, and a button below it.\n * Clicking anywhere on this prop should add this movie to the bottom tab navigation\n * route for the Watchlist screen.\n *\n * @param {MovieMoreInfo} moreInfo - the availabile information for a movie from \n *                                   the backend\n *\n * @returns {JSX.Element} - The right page inside the Popup component list.\n */\nconst PopupRight = ({moreInfo}: Props) => {\n\n    const [pressed, setPressed] = useState(false);\n\n    /**\n     * @async Function that is called when a movieTile is selected. \n     *        Returns a unresolved promise. Sets the moreInfo on successful\n     *        api call.\n     *        \n     * @returns {Promise<void>} - instead of returning the objects, it sets them\n     *                            and makes use of global variables.\n     */\n    const SaveMovie = async (): Promise<void> => {\n\n        const bodyData: reqBody<MovieMoreInfo> = {\n            \"title\": moreInfo\n        };\n        let bodyString = JSON.stringify(bodyData);\n        const reqData = requestHelper(bodyString);\n        try {\n            const response = await fetch(serverURL + '/watch_list/add', reqData);\n            const obj = await response.json();\n            console.log(obj);\n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n    return (\n        <View style={styles.container}>\n            <View style={styles.imageContainer}>\n                <Image source={{uri: moreInfo.Poster}} style={styles.image} />\n            </View>\n            <View style={styles.buttonWrapper}>\n                <TouchableOpacity \n                    style={buttonStyles(pressed).button} \n                    onPress={() => {\n                        setPressed(true);\n                        SaveMovie();\n                    }}>\n                    {pressed\n                        ? <Text style={buttonStyles(pressed).text}>Added to watch-list</Text>\n                        : <Text style={buttonStyles(pressed).text}>Add to watch-list</Text>\n                    }\n                </TouchableOpacity>\n            </View> \n        </View>\n    );\n};\n\nconst buttonStyles = (pressed : boolean) => StyleSheet.create({\n    button: {\n        textAlignVertical: \"center\",\n        height: 35,\n        width: 280,\n        backgroundColor: pressed ? colors.slate : colors.black,\n        borderRadius: 20,\n    },\n    text: {\n        height: 40,\n        width: 280,\n        textAlign: \"center\",\n        fontWeight: \"bold\",\n        color: pressed ? colors.black : colors.dullWhite,\n        marginTop: 10,\n    }\n});\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        marginTop: 20,\n        justifyContent: \"center\",\n    },\n    textWrapper: {\n        textAlignVertical: \"center\",\n        height: 35,\n        width: 280,\n        backgroundColor: colors.black,\n        borderRadius: 20,\n    },\n    buttonWrapper: {\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        top: -10,\n    },\n    imageContainer: {\n        flexGrow: 1,\n        alignItems: \"center\",\n        justifyContent: \"center\",\n    },\n    image: {\n        width: \"90%\",\n        height: \"95%\",\n        borderRadius: 20,\n    }\n})\n\nexport default PopupRight;\n"]},"metadata":{},"sourceType":"module"}