{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from 'react';\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar axios = require(\"axios\").default;\n\nfunction SearchBar(_ref) {\n  var placeholder = _ref.placeholder;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      text = _useState2[0],\n      setText = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      movieResults = _useState4[0],\n      setMovieResults = _useState4[1];\n\n  var searchQuery = function searchQuery() {\n    var movieBodyData, options, result;\n    return _regeneratorRuntime.async(function searchQuery$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            Keyboard.dismiss();\n            movieBodyData = {\n              'title': text\n            };\n            _context.prev = 2;\n            options = {\n              url: 'http://0.0.0.0:1337/search',\n              method: 'POST',\n              params: movieBodyData\n            };\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(axios.request(options));\n\n          case 6:\n            result = _context.sent;\n            console.log(result.data);\n            setMovieResults(result.data);\n            _context.next = 14;\n            break;\n\n          case 11:\n            _context.prev = 11;\n            _context.t0 = _context[\"catch\"](2);\n            console.log(_context.t0);\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[2, 11]], Promise);\n  };\n\n  return _jsx(View, {\n    style: searchbarStyles.container,\n    children: _jsx(View, {\n      style: searchbarStyles.bar,\n      children: _jsx(TextInput, {\n        style: searchbarStyles.text,\n        value: text,\n        placeholder: placeholder,\n        placeholderTextColor: \"white\",\n        returnKeyType: \"search\",\n        onChangeText: function onChangeText(text) {\n          return setText(text);\n        },\n        onSubmitEditing: searchQuery\n      })\n    })\n  });\n}\n\nexport default function SearchRoute() {\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(SearchBar, {\n      placeholder: \"Search for a movie...\"\n    })\n  });\n}\nvar searchbarStyles = StyleSheet.create({\n  container: {\n    flex: 1,\n    width: 325,\n    height: 50,\n    marginTop: '15%',\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    color: \"#fff\"\n  },\n  bar: {\n    textAlign: 'center',\n    backgroundColor: 'black',\n    borderRadius: 20,\n    paddingLeft: 20,\n    paddingRight: 20,\n    paddingTop: 15,\n    paddingBottom: 15,\n    fontSize: 15\n  },\n  text: {\n    color: \"#fff\"\n  }\n});\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  }\n});","map":{"version":3,"sources":["/home/ndonfris/Projects/frontends/react-projects/typescript/ios/ts-movie-list/routes/SearchRoute.tsx"],"names":["React","useState","axios","require","default","SearchBar","placeholder","text","setText","movieResults","setMovieResults","searchQuery","Keyboard","dismiss","movieBodyData","options","url","method","params","request","result","console","log","data","searchbarStyles","container","bar","SearchRoute","styles","StyleSheet","create","flex","width","height","marginTop","marginLeft","marginRight","color","textAlign","backgroundColor","borderRadius","paddingLeft","paddingRight","paddingTop","paddingBottom","fontSize"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport {Keyboard, View, StyleSheet, TextInput} from 'react-native'\n\nconst axios = require(\"axios\").default;\n\ninterface SearchBarProps {\n    placeholder?: string;\n}\n\nfunction SearchBar({placeholder}:SearchBarProps){\n    const [text, setText] = useState(\"\");\n    const [movieResults, setMovieResults] = useState([]);\n\n    const searchQuery = async () => {\n        Keyboard.dismiss();\n        const movieBodyData = {'title': text};\n        \n        try {\n            const options = {\n                url: 'http://0.0.0.0:1337/search',\n                method: 'POST',\n                params: movieBodyData,\n            }\n            const result = await axios.request(options);\n            console.log(result.data);\n            setMovieResults(result.data);\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    return (\n        <View style={searchbarStyles.container}>\n            <View style={searchbarStyles.bar}>\n            <TextInput\n                style={searchbarStyles.text}\n                value={text}\n                placeholder={placeholder}\n                placeholderTextColor={\"white\"}\n                returnKeyType={\"search\"}\n                onChangeText={text => setText(text)}\n                onSubmitEditing={searchQuery}\n            />\n            </View>\n        </View>\n    );\n}\n\nexport default function SearchRoute() {\n    return (\n        <View style={styles.container}><SearchBar placeholder=\"Search for a movie...\"/></View>\n    )\n}\n\n\nconst searchbarStyles = StyleSheet.create({\n    container: {\n        flex: 1,\n        width: 325,\n        height: 50,\n        marginTop: '15%',\n        marginLeft: \"auto\",\n        marginRight: \"auto\",\n        color: \"#fff\",\n    },\n    bar: {\n        textAlign: 'center',\n        backgroundColor: 'black',\n        borderRadius: 20,\n        paddingLeft: 20,\n        paddingRight: 20,\n        paddingTop: 15,\n        paddingBottom: 15,\n        fontSize: 15,\n    },\n    text: {\n        color: \"#fff\",\n    }\n});\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n    }\n});\n\n"]},"metadata":{},"sourceType":"module"}