{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport colors from \"../helpers/Colors\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar SearchBar = function SearchBar(_ref) {\n  var placeholder = _ref.placeholder,\n      query = _ref.query,\n      updateQuery = _ref.updateQuery,\n      searchFunction = _ref.searchFunction;\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(View, {\n      style: styles.bar,\n      children: _jsx(TextInput, {\n        style: styles.text,\n        value: query,\n        placeholder: placeholder,\n        placeholderTextColor: \"#bfc7d5\",\n        returnKeyType: \"search\",\n        onChangeText: updateQuery,\n        onSubmitEditing: searchFunction\n      })\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: '15%',\n    alignItems: 'center',\n    color: colors.black\n  },\n  bar: {\n    justifyContent: \"space-around\",\n    width: 325,\n    height: 50,\n    textAlign: 'center',\n    backgroundColor: colors.barDarker,\n    color: colors.dullWhite,\n    borderRadius: 20,\n    paddingLeft: 20,\n    paddingRight: 20,\n    paddingTop: 15,\n    paddingBottom: 15,\n    fontSize: 15\n  },\n  text: {\n    color: colors.dullWhite\n  }\n});\nexport default SearchBar;","map":{"version":3,"sources":["/home/ndonfris/Projects/ts-movie-list-frontend/frontend/components/SearchBar.tsx"],"names":["React","colors","SearchBar","placeholder","query","updateQuery","searchFunction","styles","container","bar","text","StyleSheet","create","flex","marginTop","alignItems","color","black","justifyContent","width","height","textAlign","backgroundColor","barDarker","dullWhite","borderRadius","paddingLeft","paddingRight","paddingTop","paddingBottom","fontSize"],"mappings":"AAKA,OAAOA,KAAP,MAAwB,OAAxB;;;;AAGA,OAAOC,MAAP;;;AAyBA,IAAMC,SAAoB,GAAG,SAAvBA,SAAuB,OAAuD;AAAA,MAArDC,WAAqD,QAArDA,WAAqD;AAAA,MAAxCC,KAAwC,QAAxCA,KAAwC;AAAA,MAAjCC,WAAiC,QAAjCA,WAAiC;AAAA,MAApBC,cAAoB,QAApBA,cAAoB;AAChF,SACI,KAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA,cACI,KAAC,IAAD;AAAM,MAAA,KAAK,EAAED,MAAM,CAACE,GAApB;AAAA,gBACI,KAAC,SAAD;AACI,QAAA,KAAK,EAAEF,MAAM,CAACG,IADlB;AAEI,QAAA,KAAK,EAAEN,KAFX;AAGI,QAAA,WAAW,EAAED,WAHjB;AAII,QAAA,oBAAoB,EAAE,SAJ1B;AAKI,QAAA,aAAa,EAAE,QALnB;AAMI,QAAA,YAAY,EAAEE,WANlB;AAOI,QAAA,eAAe,EAAEC;AAPrB;AADJ;AADJ,IADJ;AAeH,CAhBD;;AAkBA,IAAMC,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;AAC7BJ,EAAAA,SAAS,EAAE;AACPK,IAAAA,IAAI,EAAE,CADC;AAEPC,IAAAA,SAAS,EAAE,KAFJ;AAGPC,IAAAA,UAAU,EAAE,QAHL;AAIPC,IAAAA,KAAK,EAAEf,MAAM,CAACgB;AAJP,GADkB;AAO7BR,EAAAA,GAAG,EAAE;AACDS,IAAAA,cAAc,EAAE,cADf;AAEDC,IAAAA,KAAK,EAAE,GAFN;AAGDC,IAAAA,MAAM,EAAE,EAHP;AAIDC,IAAAA,SAAS,EAAE,QAJV;AAKDC,IAAAA,eAAe,EAAErB,MAAM,CAACsB,SALvB;AAMDP,IAAAA,KAAK,EAAEf,MAAM,CAACuB,SANb;AAODC,IAAAA,YAAY,EAAE,EAPb;AAQDC,IAAAA,WAAW,EAAE,EARZ;AASDC,IAAAA,YAAY,EAAE,EATb;AAUDC,IAAAA,UAAU,EAAE,EAVX;AAWDC,IAAAA,aAAa,EAAE,EAXd;AAYDC,IAAAA,QAAQ,EAAE;AAZT,GAPwB;AAqB7BpB,EAAAA,IAAI,EAAE;AACFM,IAAAA,KAAK,EAAEf,MAAM,CAACuB;AADZ;AArBuB,CAAlB,CAAf;AA0BA,eAAetB,SAAf","sourcesContent":["/**\n * File:        SearchBar.tsx\n * Author:      Nick Donfris\n * Created:     01/24/22\n */\nimport React, {FC} from 'react';\nimport {View, StyleSheet, TextInput} from 'react-native';\nimport {Movie} from '../helpers/Interfaces';\nimport colors from '../helpers/Colors';\n\n/* props necessary for the searchbar  */\ninterface Props {\n    placeholder?: string;\n    searchFunction: () => void;\n    query: string;\n    updateQuery: (text: string) => void;\n}\n\n\n/**\n * SearchBar component is passed many props, from it's parent component.\n * The parent component defines these props, which is used to decouple  \n * it's states.\n *\n * @param {string} placeholder - string to display when there is no input\n * @param {string} query - the value that is update when the user inserts input\n * @param {function} updateQuery - the function that stores the text inputed\n *                                 by the user, to the query \n * @param {function} searchFunction - when the submit button is pressed, \n *                                    this function is called.\n *\n * @returns {JSX.Element} - the horizontally centered SearchBar component \n */\nconst SearchBar: FC<Props> = ({placeholder, query, updateQuery, searchFunction}) => {\n    return (\n        <View style={styles.container}>\n            <View style={styles.bar}>\n                <TextInput\n                    style={styles.text}\n                    value={query}\n                    placeholder={placeholder}\n                    placeholderTextColor={\"#bfc7d5\"}\n                    returnKeyType={\"search\"}\n                    onChangeText={updateQuery}\n                    onSubmitEditing={searchFunction}\n                />\n            </View>\n        </View>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        marginTop: '15%',\n        alignItems: 'center',\n        color: colors.black,\n    },\n    bar: {\n        justifyContent: \"space-around\",\n        width: 325,\n        height: 50,\n        textAlign: 'center',\n        backgroundColor: colors.barDarker,\n        color: colors.dullWhite,\n        borderRadius: 20,\n        paddingLeft: 20,\n        paddingRight: 20,\n        paddingTop: 15,\n        paddingBottom: 15,\n        fontSize: 15,\n    },\n    text: {\n        color: colors.dullWhite\n    }\n});\n\nexport default SearchBar;\n"]},"metadata":{},"sourceType":"module"}