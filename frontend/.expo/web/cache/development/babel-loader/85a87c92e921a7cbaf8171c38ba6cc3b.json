{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { requestHelper } from \"../helpers/Functions\";\nimport serverURL from \"../helpers/URL\";\nimport colors from \"../helpers/Colors\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar RemoveTile = function RemoveTile(_ref) {\n  var movie = _ref.movie;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      removedMovie = _useState2[0],\n      setRemovedMovie = _useState2[1];\n\n  var RemoveMovie = function RemoveMovie() {\n    var bodyData, reqData, response, obj;\n    return _regeneratorRuntime.async(function RemoveMovie$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(movie.imdbID === \"\" || movie.imdbID === undefined || movie.imdbID === null)) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\", Promise.resolve());\n\n          case 2:\n            bodyData = {\n              \"title\": movie.imdbID\n            };\n            reqData = requestHelper(JSON.stringify(bodyData));\n            _context.prev = 4;\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(fetch(serverURL + '/watch_list/remove', reqData));\n\n          case 7:\n            response = _context.sent;\n            _context.next = 10;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 10:\n            obj = _context.sent;\n            console.log(obj);\n            _context.next = 17;\n            break;\n\n          case 14:\n            _context.prev = 14;\n            _context.t0 = _context[\"catch\"](4);\n            console.log(_context.t0);\n\n          case 17:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[4, 14]], Promise);\n  };\n\n  return _jsx(View, {\n    style: styles.outer,\n    children: _jsx(TouchableOpacity, {\n      style: removedStyles(removedMovie).buttonContainer,\n      activeOpacity: 0.2,\n      onPress: function onPress() {\n        RemoveMovie();\n        setRemovedMovie(true);\n      },\n      children: _jsxs(View, {\n        style: removedStyles(removedMovie).buttonContainer,\n        children: [_jsx(View, {\n          style: styles.topText,\n          children: removedMovie ? _jsx(Text, {\n            style: removedStyles(removedMovie).removedText,\n            children: \"REMOVED\"\n          }) : _jsx(Text, {\n            style: removedStyles(removedMovie).removedText,\n            children: \"Press to Remove\"\n          })\n        }), _jsx(View, {\n          style: styles.middleText,\n          children: _jsx(Text, {\n            style: removedStyles(removedMovie).text,\n            children: movie.Title\n          })\n        })]\n      })\n    })\n  });\n};\n\nvar removedStyles = function removedStyles(removedMovie) {\n  return StyleSheet.create({\n    buttonContainer: {\n      backgroundColor: removedMovie ? colors.barDarker : colors.barLighter,\n      color: removedMovie ? \"black\" : \"white\",\n      borderRadius: 10,\n      width: 120,\n      height: 120,\n      alignItems: 'center',\n      textAlign: 'center'\n    },\n    text: {\n      alignItems: 'center',\n      textAlign: 'center',\n      color: removedMovie ? \"red\" : colors.dullWhite\n    },\n    removedText: {\n      alignItems: 'center',\n      textAlign: 'center',\n      color: removedMovie ? \"red\" : colors.dullWhite,\n      fontWeight: 'bold'\n    }\n  });\n};\n\nvar styles = StyleSheet.create({\n  outer: {\n    flex: 1,\n    alignItems: 'center',\n    padding: 10\n  },\n  container: {\n    backgroundColor: 'red',\n    borderRadius: 10,\n    width: 120,\n    height: 120,\n    alignItems: 'center',\n    textAlign: 'center',\n    color: '#fff'\n  },\n  topText: {\n    paddingTop: 5,\n    paddingBottom: 5,\n    justifyContent: 'space-around'\n  },\n  middleText: {\n    alignItems: 'center',\n    textAlign: 'center',\n    textAlignVertical: 'center',\n    alignSelf: 'center',\n    justifyContent: 'space-around',\n    paddingTop: 5\n  },\n  buttonContainer: {\n    alignItems: 'center'\n  }\n});\nexport default RemoveTile;","map":{"version":3,"sources":["/home/ndonfris/Projects/ts-movie-list-frontend/frontend/components/RemoveTile.tsx"],"names":["React","useState","requestHelper","serverURL","colors","RemoveTile","movie","removedMovie","setRemovedMovie","RemoveMovie","imdbID","undefined","Promise","resolve","bodyData","reqData","JSON","stringify","fetch","response","json","obj","console","log","styles","outer","removedStyles","buttonContainer","topText","removedText","middleText","text","Title","StyleSheet","create","backgroundColor","barDarker","barLighter","color","borderRadius","width","height","alignItems","textAlign","dullWhite","fontWeight","flex","padding","container","paddingTop","paddingBottom","justifyContent","textAlignVertical","alignSelf"],"mappings":";;AAKA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;;;AAGA,SAA4CC,aAA5C;AACA,OAAOC,SAAP;AACA,OAAOC,MAAP;;;;AAaA,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAAoB;AAAA,MAAlBC,KAAkB,QAAlBA,KAAkB;;AACnC,kBAAwCL,QAAQ,CAAC,KAAD,CAAhD;AAAA;AAAA,MAAOM,YAAP;AAAA,MAAqBC,eAArB;;AASA,MAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACZH,KAAK,CAACI,MAAN,KAAiB,EAAjB,IAAuBJ,KAAK,CAACI,MAAN,KAAiBC,SAAxC,IAAqDL,KAAK,CAACI,MAAN,KAAiB,IAD1D;AAAA;AAAA;AAAA;;AAAA,6CAELE,OAAO,CAACC,OAAR,EAFK;;AAAA;AAIZC,YAAAA,QAJY,GAIiB;AAAE,uBAASR,KAAK,CAACI;AAAjB,aAJjB;AAKZK,YAAAA,OALY,GAKFb,aAAa,CAACc,IAAI,CAACC,SAAL,CAAeH,QAAf,CAAD,CALX;AAAA;AAAA;AAAA,6CAOWI,KAAK,CAACf,SAAS,GAAG,oBAAb,EAAmCY,OAAnC,CAPhB;;AAAA;AAONI,YAAAA,QAPM;AAAA;AAAA,6CAQMA,QAAQ,CAACC,IAAT,EARN;;AAAA;AAQNC,YAAAA,GARM;AASZC,YAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AATY;AAAA;;AAAA;AAAA;AAAA;AAWZC,YAAAA,OAAO,CAACC,GAAR;;AAXY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAApB;;AAeA,SACI,KAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,KAApB;AAAA,cACI,KAAC,gBAAD;AACI,MAAA,KAAK,EAAEC,aAAa,CAACnB,YAAD,CAAb,CAA4BoB,eADvC;AAEI,MAAA,aAAa,EAAE,GAFnB;AAGI,MAAA,OAAO,EAAE,mBAAM;AACXlB,QAAAA,WAAW;AACXD,QAAAA,eAAe,CAAC,IAAD,CAAf;AACH,OANL;AAAA,gBAOI,MAAC,IAAD;AAAM,QAAA,KAAK,EAAEkB,aAAa,CAACnB,YAAD,CAAb,CAA4BoB,eAAzC;AAAA,mBACI,KAAC,IAAD;AAAM,UAAA,KAAK,EAAEH,MAAM,CAACI,OAApB;AAAA,oBACKrB,YAAY,GACR,KAAC,IAAD;AAAM,YAAA,KAAK,EAAEmB,aAAa,CAACnB,YAAD,CAAb,CAA4BsB,WAAzC;AAAA;AAAA,YADQ,GAER,KAAC,IAAD;AAAM,YAAA,KAAK,EAAEH,aAAa,CAACnB,YAAD,CAAb,CAA4BsB,WAAzC;AAAA;AAAA;AAHT,UADJ,EAOI,KAAC,IAAD;AAAM,UAAA,KAAK,EAAEL,MAAM,CAACM,UAApB;AAAA,oBACI,KAAC,IAAD;AAAM,YAAA,KAAK,EAAEJ,aAAa,CAACnB,YAAD,CAAb,CAA4BwB,IAAzC;AAAA,sBAAgDzB,KAAK,CAAC0B;AAAtD;AADJ,UAPJ;AAAA;AAPJ;AADJ,IADJ;AAuBH,CAhDD;;AAkDA,IAAMN,aAAa,GAAG,SAAhBA,aAAgB,CAACnB,YAAD;AAAA,SAA4B0B,UAAU,CAACC,MAAX,CAAkB;AAChEP,IAAAA,eAAe,EAAE;AACbQ,MAAAA,eAAe,EAAE5B,YAAY,GAAGH,MAAM,CAACgC,SAAV,GAAsBhC,MAAM,CAACiC,UAD7C;AAEbC,MAAAA,KAAK,EAAE/B,YAAY,GAAG,OAAH,GAAa,OAFnB;AAGbgC,MAAAA,YAAY,EAAE,EAHD;AAIbC,MAAAA,KAAK,EAAE,GAJM;AAKbC,MAAAA,MAAM,EAAE,GALK;AAMbC,MAAAA,UAAU,EAAE,QANC;AAObC,MAAAA,SAAS,EAAE;AAPE,KAD+C;AAUhEZ,IAAAA,IAAI,EAAE;AACFW,MAAAA,UAAU,EAAE,QADV;AAEFC,MAAAA,SAAS,EAAE,QAFT;AAGFL,MAAAA,KAAK,EAAE/B,YAAY,GAAG,KAAH,GAAWH,MAAM,CAACwC;AAHnC,KAV0D;AAehEf,IAAAA,WAAW,EAAE;AACTa,MAAAA,UAAU,EAAE,QADH;AAETC,MAAAA,SAAS,EAAE,QAFF;AAGTL,MAAAA,KAAK,EAAE/B,YAAY,GAAG,KAAH,GAAWH,MAAM,CAACwC,SAH5B;AAITC,MAAAA,UAAU,EAAE;AAJH;AAfmD,GAAlB,CAA5B;AAAA,CAAtB;;AAwBA,IAAMrB,MAAM,GAAGS,UAAU,CAACC,MAAX,CAAkB;AAC7BT,EAAAA,KAAK,EAAE;AACHqB,IAAAA,IAAI,EAAE,CADH;AAEHJ,IAAAA,UAAU,EAAE,QAFT;AAGHK,IAAAA,OAAO,EAAE;AAHN,GADsB;AAM7BC,EAAAA,SAAS,EAAE;AACPb,IAAAA,eAAe,EAAE,KADV;AAEPI,IAAAA,YAAY,EAAE,EAFP;AAGPC,IAAAA,KAAK,EAAE,GAHA;AAIPC,IAAAA,MAAM,EAAE,GAJD;AAKPC,IAAAA,UAAU,EAAE,QALL;AAMPC,IAAAA,SAAS,EAAE,QANJ;AAOPL,IAAAA,KAAK,EAAE;AAPA,GANkB;AAe7BV,EAAAA,OAAO,EAAE;AACLqB,IAAAA,UAAU,EAAE,CADP;AAELC,IAAAA,aAAa,EAAE,CAFV;AAGLC,IAAAA,cAAc,EAAE;AAHX,GAfoB;AAoB7BrB,EAAAA,UAAU,EAAE;AACRY,IAAAA,UAAU,EAAE,QADJ;AAERC,IAAAA,SAAS,EAAE,QAFH;AAGRS,IAAAA,iBAAiB,EAAE,QAHX;AAIRC,IAAAA,SAAS,EAAE,QAJH;AAKRF,IAAAA,cAAc,EAAE,cALR;AAMRF,IAAAA,UAAU,EAAE;AANJ,GApBiB;AA4B7BtB,EAAAA,eAAe,EAAE;AACbe,IAAAA,UAAU,EAAE;AADC;AA5BY,CAAlB,CAAf;AAiCA,eAAerC,UAAf","sourcesContent":["/**\n * File:        RemoveTile.tsx\n * Author:      Nick Donfris\n * Created:     01/24/22\n */\nimport React, {useState} from 'react';\nimport {StyleSheet, Text, View, TouchableOpacity} from 'react-native';\nimport {Movie, MovieMoreInfo, reqBody} from '../helpers/Interfaces';\nimport {createRequest, failedMovieMoreInfo, requestHelper} from '../helpers/Functions';\nimport serverURL from '../helpers/URL';\nimport colors from '../helpers/Colors';\n\n\ninterface Props {\n    movie: Movie;\n}\n\n/**\n * A MovieTile, which is a clickable component, which can render more information about the MovieTile\n *\n * @param {Movie} movie - the Movie interface which contains strings that correlate to the necessary details for a movie\n * @returns {JSX.Element} - the tile shown for a Movie, and the set of states that are coupled to rendering more information about a tile. \n */\nconst RemoveTile = ({movie}: Props) => {\n    const [removedMovie, setRemovedMovie] = useState(false);\n    /**\n     * @async Function that is called when a movieTile is selected. \n     *        Returns a unresolved promise. Sets the moreInfo on successful\n     *        api call.\n     *        \n     * @returns {Promise<void>} - instead of returning the objects, it sets them\n     *                            and makes use of global variables.\n     */\n    const RemoveMovie = async () : Promise<void> => {\n        if (movie.imdbID === \"\" || movie.imdbID === undefined || movie.imdbID === null) {\n            return Promise.resolve();\n        }\n        let bodyData : reqBody<string> = { \"title\": movie.imdbID };\n        let reqData = requestHelper(JSON.stringify(bodyData));\n        try {\n            const response = await fetch(serverURL + '/watch_list/remove', reqData);\n            const obj = await response.json();\n            console.log(obj);\n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n    return (\n        <View style={styles.outer}>\n            <TouchableOpacity\n                style={removedStyles(removedMovie).buttonContainer}\n                activeOpacity={0.2}\n                onPress={() => {\n                    RemoveMovie();\n                    setRemovedMovie(true);\n                }}>\n                <View style={removedStyles(removedMovie).buttonContainer}>\n                    <View style={styles.topText}>\n                        {removedMovie\n                            ?<Text style={removedStyles(removedMovie).removedText}>REMOVED</Text>\n                            :<Text style={removedStyles(removedMovie).removedText}>Press to Remove</Text>\n                        }\n                    </View> \n                    <View style={styles.middleText}>\n                        <Text style={removedStyles(removedMovie).text}>{movie.Title}</Text>\n                    </View>\n                </View>\n            </TouchableOpacity> \n        </View>\n    );\n}\n\nconst removedStyles = (removedMovie : boolean) => StyleSheet.create({\n    buttonContainer: {\n        backgroundColor: removedMovie ? colors.barDarker : colors.barLighter,\n        color: removedMovie ? \"black\" : \"white\",\n        borderRadius: 10,\n        width: 120,\n        height: 120,\n        alignItems: 'center',\n        textAlign: 'center',\n    },\n    text: {\n        alignItems: 'center',\n        textAlign: 'center',\n        color: removedMovie ? \"red\" : colors.dullWhite,\n    },\n    removedText: {\n        alignItems: 'center',\n        textAlign: 'center',\n        color: removedMovie ? \"red\" : colors.dullWhite,\n        fontWeight: 'bold'\n    }\n});\n\n\nconst styles = StyleSheet.create({\n    outer: {\n        flex: 1,\n        alignItems: 'center',\n        padding: 10,\n    },\n    container: {\n        backgroundColor: 'red',\n        borderRadius: 10,\n        width: 120,\n        height: 120,\n        alignItems: 'center',\n        textAlign: 'center',\n        color: '#fff'\n    },\n    topText: {\n        paddingTop: 5,\n        paddingBottom: 5,\n        justifyContent: 'space-around'\n    },\n    middleText: {\n        alignItems: 'center',\n        textAlign: 'center',\n        textAlignVertical: 'center',\n        alignSelf: 'center',\n        justifyContent: 'space-around',\n        paddingTop: 5\n    },\n    buttonContainer: {\n        alignItems: 'center',\n    }\n});\n\nexport default RemoveTile;\n"]},"metadata":{},"sourceType":"module"}