{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport serverURL from \"../helpers/URL\";\nimport SavedMovieList from \"../components/SavedMovieList\";\nimport colors from \"../helpers/Colors\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar SavedRoute = function SavedRoute() {\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      movies = _useState2[0],\n      setMovies = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      refreshing = _useState4[0],\n      _setRefreshing = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      removing = _useState6[0],\n      setRemoving = _useState6[1];\n\n  var _useState7 = useState(true),\n      _useState8 = _slicedToArray(_useState7, 2),\n      loadIcon = _useState8[0],\n      setLoadIcon = _useState8[1];\n\n  var _useState9 = useState(0),\n      _useState10 = _slicedToArray(_useState9, 2),\n      count = _useState10[0],\n      setCount = _useState10[1];\n\n  useEffect(function () {\n    function retrieveMovies() {\n      var res;\n      return _regeneratorRuntime.async(function retrieveMovies$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(fetch(serverURL + \"/watch_list/get/less\"));\n\n            case 2:\n              res = _context.sent;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(res.json().then(function (res) {\n                return setMovies(res);\n              }).catch(function (err) {\n                return console.warn(err);\n              }));\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    if (count == 0) {\n      setLoadIcon(true);\n      setCount(1);\n    } else {\n      setCount(count + 1);\n      setLoadIcon(false);\n    }\n\n    console.log(\"hit:\" + count);\n    retrieveMovies();\n  }, [removing, refreshing]);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(View, {\n      style: styles.header,\n      children: _jsx(Text, {\n        style: styles.headerText,\n        children: \"Watch List\"\n      })\n    }), _jsx(View, {\n      style: styles.results,\n      children: _jsx(SavedMovieList, {\n        movieArray: movies,\n        removing: removing,\n        refreshing: refreshing,\n        setRefreshing: function setRefreshing() {\n          return _setRefreshing(!refreshing);\n        },\n        loadIcon: loadIcon\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.removeButton,\n      onPress: function onPress() {\n        setRemoving(!removing);\n\n        _setRefreshing(!refreshing);\n      },\n      children: removing ? _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Finished Removing\"\n      }) : _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Remove  Movie(s)?\"\n      })\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    backgroundColor: colors.black\n  },\n  header: {\n    paddingTop: \"15%\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: colors.black\n  },\n  headerText: {\n    color: colors.dullWhite,\n    fontSize: 20,\n    fontWeight: \"bold\"\n  },\n  results: {\n    height: \"80%\",\n    width: \"100%\",\n    backgroundColor: colors.black,\n    paddingTop: \"5%\",\n    paddingBottom: \"5%\"\n  },\n  removeButton: {\n    alignSelf: \"center\",\n    width: \"60%\",\n    height: \"5%\",\n    borderRadius: 20,\n    backgroundColor: colors.barLighter,\n    textAlign: \"center\",\n    justifyContent: \"center\"\n  },\n  buttonText: {\n    textAlign: \"center\",\n    justifyContent: \"center\",\n    color: colors.dullWhite\n  }\n});\nexport default SavedRoute;","map":{"version":3,"sources":["/home/ndonfris/Projects/ts-movie-list-frontend/frontend/routes/SavedRoute.tsx"],"names":["React","useEffect","useState","serverURL","SavedMovieList","colors","SavedRoute","movies","setMovies","refreshing","setRefreshing","removing","setRemoving","loadIcon","setLoadIcon","count","setCount","retrieveMovies","fetch","res","json","then","catch","err","console","warn","log","styles","container","header","headerText","results","removeButton","buttonText","StyleSheet","create","flex","justifyContent","backgroundColor","black","paddingTop","alignItems","color","dullWhite","fontSize","fontWeight","height","width","paddingBottom","alignSelf","borderRadius","barLighter","textAlign"],"mappings":"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","sourcesContent":["/**\n * File:        SavedRoute.tsx\n * Author:      Nick Donfris\n * Created:     01/24/22\n */\nimport React, { useEffect, useState } from \"react\";\nimport {Movie} from '../helpers/Interfaces';\nimport {StyleSheet, View, Text, TouchableOpacity} from \"react-native\";\nimport serverURL from \"../helpers/URL\";\nimport SavedMovieList from \"../components/SavedMovieList\";\nimport colors from \"../helpers/Colors\";\n\n/*\n * Creates the SavedRoute page. Calls mongoDB. The useEffect hook is called any time the refreshing\n * state is changed. This hook then asynchronously retrieves the movies from the backend\n *\n * @returns {JSX.Element} Saved Movies Page rendered by clicking the bottom navigation bar\n */\nconst SavedRoute = () => {\n    const [movies, setMovies] = useState<Movie[]>();\n\n    const [refreshing, setRefreshing] = useState(false);\n    const [removing, setRemoving] = useState(false);\n    const [loadIcon, setLoadIcon] = useState(true);\n    const [count, setCount] = useState(0);\n\n    useEffect(() => {\n        async function retrieveMovies(){ \n            const res = await fetch(serverURL + \"/watch_list/get/less\");\n            await res.json().then(res => setMovies(res)).catch(err => console.warn(err));\n        }\n        if (count == 0) {\n            setLoadIcon(true);\n            setCount(1);\n        } else {\n            setCount(count+1);\n            setLoadIcon(false);\n        }\n        console.log(\"hit:\" +count);\n        retrieveMovies();\n    }, [removing, refreshing]);\n\n    return (\n        <View style={styles.container}>\n            <View style={styles.header}>\n                <Text style={styles.headerText}>Watch List</Text>\n            </View>\n            <View style={styles.results}>\n                <SavedMovieList movieArray={movies} removing={removing} refreshing={refreshing} setRefreshing={() => setRefreshing(!refreshing)} loadIcon={loadIcon} />\n            </View> \n            <TouchableOpacity \n                style={styles.removeButton}\n                onPress={() => {\n                    setRemoving(!removing);\n                    setRefreshing(!refreshing);\n            }}>\n                {removing\n                    ? <Text style={styles.buttonText}>Finished Removing</Text>\n                    : <Text style={styles.buttonText}>Remove  Movie(s)?</Text>\n                }\n            </TouchableOpacity>\n        </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        justifyContent: \"center\",\n        backgroundColor: colors.black\n    },\n    header: {\n        paddingTop: \"15%\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        backgroundColor: colors.black\n    },\n    headerText: {\n        color: colors.dullWhite,\n        fontSize: 20,\n        fontWeight: \"bold\",\n    },\n    results: {\n        height: \"80%\",\n        width: \"100%\",\n        backgroundColor: colors.black,\n        paddingTop: \"5%\",\n        paddingBottom: \"5%\",\n    },\n    removeButton: {\n        alignSelf: \"center\",\n        width: \"60%\",\n        height: \"5%\",\n        borderRadius: 20,\n        backgroundColor: colors.barLighter,\n        textAlign: \"center\",\n        justifyContent: \"center\",\n    },\n    buttonText: {\n        textAlign: \"center\",\n        justifyContent: \"center\",\n        color: colors.dullWhite,\n    }\n});\n\nexport default SavedRoute;\n"]},"metadata":{},"sourceType":"module"}