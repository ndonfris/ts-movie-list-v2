{"version":3,"sources":["index.tsx"],"names":["React","Animated","CardWrap","forwardRef","style","children","cardContainerStyle","rest","ref"],"mappings":";;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AAEA,MAAMC,QAAQ,gBAAGF,KAAK,CAACG,UAAN,CACf,CACE;AACEC,EAAAA,KADF;AAEEC,EAAAA,QAFF;AAGEC,EAAAA,kBAHF;AAIE,KAAGC;AAJL,CADF,EAWEC,GAXF,KAYK;AACH,sBACE,oBAAC,QAAD,CAAU,IAAV;AACQJ,IAAAA,KAAK,EAAE,CAACA,KAAD,EAAQE,kBAAR;AADf,KAEMC,IAFN;AAGE,IAAA,GAAG,EAAEC;AAHP,MAKGH,QALH,CADF;AASD,CAvBc,CAAjB;AA0BA,eAAeH,QAAf","sourcesContent":["import type { ViewStyle, StyleProp } from 'react-native';\nimport React from 'react';\nimport Animated from 'react-native-reanimated';\n\nconst CardWrap = React.forwardRef(\n  (\n    {\n      style,\n      children,\n      cardContainerStyle,\n      ...rest\n    }: {\n      style: ViewStyle;\n      children?: React.ReactNode;\n      cardContainerStyle: StyleProp<ViewStyle>;\n    },\n    ref: React.LegacyRef<Animated.View> | undefined\n  ) => {\n    return (\n      <Animated.View\n        {...{ style: [style, cardContainerStyle] }}\n        {...rest}\n        ref={ref}\n      >\n        {children}\n      </Animated.View>\n    );\n  }\n);\n\nexport default CardWrap;\n"]}