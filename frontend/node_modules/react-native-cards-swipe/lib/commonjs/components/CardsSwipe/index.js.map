{"version":3,"sources":["index.tsx"],"names":["width","Dimensions","get","CardsSwipe","cards","renderCard","loop","renderNoMoreCard","renderYep","renderNope","initialIndex","containerStyle","cardContainerStyle","lowerCardZoom","animDuration","horizontalThreshold","rotationAngle","onSwipeStart","onSwipeChangeDirection","onSwipeEnd","onSwiped","onSwipedLeft","onSwipedRight","onNoMoreCards","ref","index","setIndex","lock","setLock","noMoreCards","setNoMoreCards","scale","overrideNopeOpacity","overrideLikeOpacity","secondIndex","setSecondIndex","swipeLeft","swipeRight","x","y","originY","prevCards","current","value","setTimeout","onCardSwiped","onStartSwipe","onChangeSwipeDirection","direction","onEndSwipe","right","onEndCardAnimation","resetPosition","secondCardIndex","duration","length","incSafe","i","renderNoMoreCardsContainer","nopeOpacityStyle","opacity","likeOpacityStyle","style","factor","rotateZ","elevation","height","position","alignItems","justifyContent","transform","translateX","translateY","lowerStyle","lowerCardScale","Animated","Extrapolate","CLAMP","zIndex","styles","container","key","pointerEvents","onSnap","onStart","onChangeDirection","onEnd","overlay","row"],"mappings":"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","sourcesContent":["import React, {\n  forwardRef,\n  Ref,\n  useCallback,\n  useEffect,\n  useImperativeHandle,\n  useRef,\n  useState,\n} from 'react';\nimport { Dimensions, View, StyleProp, ViewStyle } from 'react-native';\nimport Animated, {\n  interpolate,\n  useAnimatedStyle,\n  useSharedValue,\n  withSpring,\n  withTiming,\n  runOnJS,\n  withDelay,\n} from 'react-native-reanimated';\n\nimport SwipePan, { SWIPE_DIRECTION } from '../SwipePan';\nimport CardWrap from '../CardWrap';\n\nimport styles from './styles';\n\nconst { width } = Dimensions.get('window');\n\ninterface CardsSwipeProps {\n  cards: Array<any>;\n  renderCard: (card: any) => React.ReactNode;\n  loop?: boolean;\n  renderNoMoreCard?: () => React.ReactNode;\n  renderYep?: () => React.ReactNode;\n  renderNope?: () => React.ReactNode;\n  initialIndex?: number;\n  containerStyle?: StyleProp<ViewStyle>;\n  cardContainerStyle?: StyleProp<ViewStyle>;\n  lowerCardZoom?: number;\n  animDuration?: number;\n  horizontalThreshold?: number;\n  rotationAngle?: number;\n  onSwipeStart?: (index: number) => void;\n  onSwipeChangeDirection?: (direction: SWIPE_DIRECTION) => void;\n  onSwipeEnd?: (index: number) => void;\n  onSwiped?: (index: number) => void;\n  onSwipedLeft?: (index: number) => void;\n  onSwipedRight?: (index: number) => void;\n  onNoMoreCards?: () => void;\n}\n\nconst CardsSwipe = forwardRef(\n  (\n    {\n      cards,\n      renderCard,\n      loop = true,\n      renderNoMoreCard = () => null,\n      renderYep = () => null,\n      renderNope = () => null,\n      initialIndex = 0,\n      containerStyle = {},\n      cardContainerStyle = {},\n      lowerCardZoom = 0.95,\n      animDuration = 150,\n      horizontalThreshold = width * 0.65,\n      rotationAngle = 10,\n      onSwipeStart = () => {},\n      onSwipeChangeDirection = () => {},\n      onSwipeEnd = () => {},\n      onSwiped = () => {},\n      onSwipedLeft = () => {},\n      onSwipedRight = () => {},\n      onNoMoreCards = () => {},\n    }: CardsSwipeProps,\n    ref: Ref<CardsSwipeRefObject>\n  ) => {\n    const [index, setIndex] = useState(initialIndex);\n    const [lock, setLock] = useState(false);\n    const [noMoreCards, setNoMoreCards] = useState(false);\n    const scale = useSharedValue(1);\n    const overrideNopeOpacity = useSharedValue(0);\n    const overrideLikeOpacity = useSharedValue(0);\n\n    const [secondIndex, setSecondIndex] = useState(index + 1);\n\n    useImperativeHandle(ref, () => ({ swipeLeft, swipeRight }));\n\n    const x = useSharedValue(0);\n    const y = useSharedValue(0);\n    const originY = useSharedValue(0);\n\n    const prevCards = useRef(cards);\n    useEffect(() => {\n      if (prevCards.current !== cards) {\n        prevCards.current = cards;\n        if (noMoreCards) {\n          setIndex(0);\n          setSecondIndex(1);\n          setNoMoreCards(false);\n          x.value = 0;\n          y.value = 0;\n        }\n      }\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [cards]);\n\n    useEffect(() => {\n      if (noMoreCards) {\n        onNoMoreCards();\n      }\n    }, [noMoreCards, onNoMoreCards]);\n\n    const swipeLeft = () => {\n      if (index >= 0) {\n        overrideNopeOpacity.value = withSpring(1);\n        setTimeout(() => onCardSwiped(false), 300);\n      }\n    };\n\n    const swipeRight = () => {\n      if (index >= 0) {\n        overrideLikeOpacity.value = withSpring(1);\n        setTimeout(() => onCardSwiped(true), 300);\n      }\n    };\n\n    const onStartSwipe = useCallback(() => {\n      onSwipeStart(index);\n    }, [index, onSwipeStart]);\n\n    const onChangeSwipeDirection = useCallback(\n      (direction: SWIPE_DIRECTION) => {\n        onSwipeChangeDirection(direction);\n      },\n      [onSwipeChangeDirection]\n    );\n\n    const onEndSwipe = useCallback(() => {\n      onSwipeEnd(index);\n    }, [index, onSwipeEnd]);\n\n    const onCardSwiped = useCallback(\n      (right) => {\n        setLock(true);\n\n        onSwiped(index);\n\n        const onEndCardAnimation = () => {\n          const resetPosition = (secondCardIndex: number) => {\n            x.value = withDelay(\n              100,\n              withTiming(0, { duration: 0 }, () => {\n                runOnJS(setSecondIndex)(secondCardIndex);\n              })\n            );\n            y.value = withDelay(100, withTiming(0, { duration: 0 }));\n          };\n          if (loop || index + 2 < cards.length) {\n            const incSafe = (i: number) => (i + 1) % cards.length;\n            setIndex(incSafe(index));\n            resetPosition(incSafe(secondIndex));\n          } else if (index + 1 < cards.length) {\n            setIndex(index + 1);\n            resetPosition(-1);\n          } else {\n            setIndex(-1);\n            setNoMoreCards(true);\n          }\n          overrideNopeOpacity.value = 0;\n          overrideLikeOpacity.value = 0;\n\n          setLock(false);\n        };\n\n        if (right) {\n          onSwipedRight(index);\n          x.value = withTiming(width * 1.5, { duration: animDuration }, () => {\n            runOnJS(onEndCardAnimation)();\n          });\n          y.value = withSpring(0);\n        } else {\n          onSwipedLeft(index);\n          x.value = withTiming(-width * 1.5, { duration: animDuration }, () => {\n            runOnJS(onEndCardAnimation)();\n          });\n          y.value = withSpring(0);\n        }\n      },\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      [index, secondIndex, cards, onSwiped, onSwipedRight, onSwipedLeft]\n    );\n\n    const renderNoMoreCardsContainer = () => {\n      if (noMoreCards) {\n        return <View>{renderNoMoreCard()}</View>;\n      }\n      return null;\n    };\n\n    const nopeOpacityStyle = useAnimatedStyle(() => {\n      const opacity = interpolate(x.value, [0, -horizontalThreshold], [0, 1]);\n\n      return {\n        opacity: overrideNopeOpacity.value || opacity,\n      };\n    });\n\n    const likeOpacityStyle = useAnimatedStyle(() => {\n      const opacity = interpolate(x.value, [0, horizontalThreshold], [0, 1]);\n\n      return {\n        opacity: overrideLikeOpacity.value || opacity,\n      };\n    });\n\n    const style = useAnimatedStyle(() => {\n      const factor = 1;\n\n      const rotateZ = interpolate(\n        x.value,\n        [0, factor * horizontalThreshold],\n        [0, rotationAngle]\n      );\n\n      return {\n        elevation: 2,\n        width: '100%',\n        height: '100%',\n        position: 'absolute',\n        alignItems: 'center',\n        justifyContent: 'center',\n        transform: [\n          { scale: scale.value },\n          { translateX: x.value },\n          { translateY: y.value },\n          { rotateZ: `${rotateZ}deg` },\n        ],\n      };\n    });\n\n    const lowerStyle = useAnimatedStyle(() => {\n      const lowerCardScale = interpolate(\n        x.value,\n        [-horizontalThreshold, -0.01, 0, 0.01, horizontalThreshold],\n        [1, lowerCardZoom, lowerCardZoom, lowerCardZoom, 1],\n        Animated.Extrapolate.CLAMP\n      );\n\n      return {\n        zIndex: -1,\n        width: '100%',\n        height: '100%',\n        position: 'absolute',\n        alignItems: 'center',\n        justifyContent: 'center',\n        transform: [\n          { translateX: 0 },\n          { translateY: 0 },\n          { scale: secondIndex >= 0 ? lowerCardScale : 1 },\n        ],\n      };\n    });\n\n    return (\n      <View\n        pointerEvents={lock ? 'none' : 'auto'}\n        style={[styles.container, containerStyle]}\n      >\n        {secondIndex >= 0 ? (\n          <CardWrap\n            {...{\n              key: secondIndex,\n              pointerEvents: 'none',\n              style: lowerStyle,\n              cardContainerStyle,\n            }}\n          >\n            {renderCard(cards[secondIndex])}\n          </CardWrap>\n        ) : null}\n        {index >= 0 ? (\n          <SwipePan\n            {...{\n              onSnap: onCardSwiped,\n              onStart: onStartSwipe,\n              onChangeDirection: onChangeSwipeDirection,\n              onEnd: onEndSwipe,\n              x,\n              y,\n              originY,\n            }}\n          >\n            <CardWrap\n              {...{\n                style,\n                cardContainerStyle,\n              }}\n            >\n              {renderCard(cards[index])}\n              <Animated.View style={styles.overlay} pointerEvents={'none'}>\n                <View style={styles.row}>\n                  <Animated.View style={likeOpacityStyle}>\n                    {renderYep()}\n                  </Animated.View>\n                  <Animated.View style={nopeOpacityStyle}>\n                    {renderNope()}\n                  </Animated.View>\n                </View>\n              </Animated.View>\n            </CardWrap>\n          </SwipePan>\n        ) : null}\n        {renderNoMoreCardsContainer()}\n      </View>\n    );\n  }\n);\n\nexport default CardsSwipe;\n"]}