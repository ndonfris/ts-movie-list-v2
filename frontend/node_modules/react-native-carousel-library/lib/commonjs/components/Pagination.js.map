{"version":3,"sources":["Pagination.tsx"],"names":["width","Dimensions","get","Pagination","scrollRef","data","paginationStyles","dotSize","indicatorColor","dotColor","top","bottom","left","right","DOT_SIZE","translateX","interpolate","inputRange","outputRange","styles","absoluteWrapper","undefined","paginationContainer","paginationIndicator","transform","height","borderRadius","borderColor","map","_","i","biggerCircle","backgroundColor","StyleSheet","create","position","alignSelf","marginVertical","display","flexDirection","justifyContent","alignItems","flex","borderWidth"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Animated, Dimensions, ImageRequireSource, StyleSheet, View } from 'react-native';\n\nconst { width } = Dimensions.get('screen');\n\ninterface props {\n    scrollRef: Animated.Value,\n    data: { url: string | ImageRequireSource, title?: string }[];\n    paginationStyles?: { dotSize?: number, indicatorColor?: string, dotColor?: string, top?: number, bottom?: number, left?: number, right?: number }\n}\n\nconst Pagination: React.FC<props> = ({ scrollRef, data, paginationStyles: { dotSize, indicatorColor, dotColor, top, bottom, left, right } = {} }) => {\n    const DOT_SIZE = dotSize ? dotSize : 15;\n    const translateX = scrollRef.interpolate({\n        inputRange: [-width, 0, width],\n        outputRange: [-DOT_SIZE, 0, DOT_SIZE],\n    });\n\n    return (\n        <View style={[styles.absoluteWrapper, { bottom: bottom ? bottom : 10, top: top ? top : undefined, left: left ? left : undefined, right: right ? right : undefined }]}>\n            <View style={styles.paginationContainer}>\n                <Animated.View style={[styles.paginationIndicator, { transform: [{ translateX }], width: DOT_SIZE, height: DOT_SIZE, borderRadius: DOT_SIZE / 2, borderColor: indicatorColor ? indicatorColor : '#ddd' }]} />\n                {data.map((_, i) => (\n                    <View style={[styles.biggerCircle, { width: DOT_SIZE }]} key={i}>\n                        <View key={i} style={{ width: DOT_SIZE * 0.4, height: DOT_SIZE * 0.4, borderRadius: DOT_SIZE * 0.2, backgroundColor: dotColor ? dotColor : '#62a189' }} />\n                    </View>\n                ))}\n            </View>\n        </View>\n    );\n};\n\nexport default Pagination;\n\nconst styles = StyleSheet.create({\n    absoluteWrapper: {\n        position: 'absolute',\n        alignSelf: 'center',\n        marginVertical: 20,\n    },\n    paginationContainer: {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'center',\n        alignItems: 'center',\n        alignSelf: 'center',\n        position: 'relative',\n        flex: 1,\n    },\n    paginationIndicator: {\n        borderWidth: 1,\n        position: 'absolute',\n        left: 0,\n    },\n    biggerCircle: {\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n});\n"]}