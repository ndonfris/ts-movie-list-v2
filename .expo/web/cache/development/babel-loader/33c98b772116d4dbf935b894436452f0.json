{"ast":null,"code":"import React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport { SvgXml } from \"react-native-svg\";\nimport RottenTomatoesIcon from \"../assets/RTIcon.svg\";\nimport MetacriticLogo from \"../assets/MetacriticLogo.svg\";\nimport ImdbIcon from \"../assets/ImdbIcon.svg\";\nimport { MaterialIcons } from '@expo/vector-icons';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction IMDB(_ref) {\n  var Ratings = _ref.Ratings,\n      Title = _ref.Title;\n  var review = Ratings.find(function (rating) {\n    return rating.Source == \"Internet Movie Database\";\n  });\n\n  if (review != undefined || review != null) {\n    var searchURL = \"https://www.imdb.com/find?q=\" + Title;\n    return _jsxs(Pressable, {\n      style: styles.rating,\n      onPress: function onPress() {\n        Linking.openURL(searchURL);\n      },\n      children: [_jsx(SvgXml, {\n        width: \"80\",\n        height: \"100\",\n        xml: ImdbIcon\n      }), _jsx(Text, {\n        style: styles.text,\n        children: review.Value\n      })]\n    });\n  } else {\n    return _jsx(View, {});\n  }\n}\n\n;\n\nfunction RottenTomatoes(_ref2) {\n  var Ratings = _ref2.Ratings,\n      Title = _ref2.Title;\n  var searchURL = \"https://www.rottentomatoes.com/search?search=\" + Title;\n  var review = Ratings.find(function (rating) {\n    return rating.Source == \"Rotten Tomatoes\";\n  });\n\n  if (review != undefined || review != null) {\n    return _jsxs(Pressable, {\n      style: styles.rating,\n      onPress: function onPress() {\n        Linking.openURL(searchURL);\n      },\n      children: [_jsx(SvgXml, {\n        width: \"80\",\n        height: \"100\",\n        xml: RottenTomatoesIcon\n      }), _jsx(Text, {\n        style: styles.text,\n        children: review.Value\n      })]\n    });\n  } else {\n    return _jsx(View, {});\n  }\n}\n\n;\n\nfunction MetaCritic(_ref3) {\n  var Ratings = _ref3.Ratings,\n      Title = _ref3.Title;\n  var searchURL = \"https://www.metacritic.com/search/all/\" + Title + \"/results\";\n  var review = Ratings.find(function (rating) {\n    return rating.Source == \"Metacritic\";\n  });\n\n  if (review != undefined || review != null) {\n    return _jsxs(Pressable, {\n      style: styles.rating,\n      onPress: function onPress() {\n        Linking.openURL(searchURL);\n      },\n      children: [_jsx(SvgXml, {\n        width: \"80\",\n        height: \"100\",\n        xml: MetacriticLogo\n      }), _jsx(Text, {\n        style: styles.text,\n        children: review.Value\n      })]\n    });\n  } else {\n    return _jsx(View, {});\n  }\n}\n\nfunction NoneFound(_ref4) {\n  var Ratings = _ref4.Ratings;\n  var review = Ratings.find(function (rating) {\n    return rating.Source == \"N/a\";\n  });\n\n  if (review != undefined || review != null) {\n    return _jsxs(View, {\n      style: styles.rating,\n      children: [_jsx(MaterialIcons, {\n        name: \"error-outline\",\n        size: 40,\n        color: \"black\",\n        style: styles.error\n      }), _jsx(Text, {\n        style: styles.text,\n        children: \"Reviews not found\"\n      })]\n    });\n  } else {\n    return _jsx(View, {});\n  }\n}\n\nvar ReviewList = function ReviewList(_ref5) {\n  var moreInfo = _ref5.moreInfo;\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(IMDB, {\n      Ratings: moreInfo.Ratings,\n      Title: moreInfo.Title\n    }), _jsx(RottenTomatoes, {\n      Ratings: moreInfo.Ratings,\n      Title: moreInfo.Title\n    }), _jsx(MetaCritic, {\n      Ratings: moreInfo.Ratings,\n      Title: moreInfo.Title\n    }), _jsx(NoneFound, {\n      Ratings: moreInfo.Ratings\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    top: -10,\n    flexDirection: \"row\",\n    alignSelf: \"center\",\n    alignContent: \"space-between\",\n    minHeight: 100\n  },\n  rating: {\n    color: '#fff',\n    margin: 10\n  },\n  text: {\n    color: \"#000\",\n    top: -20,\n    fontSize: 20,\n    fontWeight: \"bold\",\n    textAlign: \"center\"\n  },\n  error: {\n    textAlign: \"center\",\n    top: -10,\n    paddingBottom: 10\n  }\n});\nexport default ReviewList;","map":{"version":3,"sources":["/home/ndonfris/Projects/frontends/react-projects/typescript/ios/ts-movie-list/components/ReviewList.tsx"],"names":["React","SvgXml","RottenTomatoesIcon","MetacriticLogo","ImdbIcon","MaterialIcons","IMDB","Ratings","Title","review","find","rating","Source","undefined","searchURL","styles","Linking","openURL","text","Value","RottenTomatoes","MetaCritic","NoneFound","error","ReviewList","moreInfo","container","StyleSheet","create","top","flexDirection","alignSelf","alignContent","minHeight","color","margin","fontSize","fontWeight","textAlign","paddingBottom"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {StyleSheet, Text, View, Pressable, Linking} from \"react-native\";\nimport {MovieMoreInfo} from \"../helpers/Interfaces\";\nimport { SvgXml } from \"react-native-svg\";\nimport RottenTomatoesIcon from '../assets/RTIcon.svg';\nimport MetacriticLogo from '../assets/MetacriticLogo.svg';\nimport ImdbIcon from '../assets/ImdbIcon.svg';\nimport { MaterialIcons } from '@expo/vector-icons';\n\nfunction IMDB({Ratings, Title}: MovieMoreInfo) {\n    const review = Ratings.find(rating => rating.Source == \"Internet Movie Database\");\n    if (review != undefined || review != null) {\n        const searchURL = \"https://www.imdb.com/find?q=\"+ Title;\n        return (\n            <Pressable style={styles.rating} onPress={() => { Linking.openURL(searchURL) }}>\n                <SvgXml width=\"80\" height=\"100\" xml={ImdbIcon} />\n                <Text style={styles.text}>{review.Value}</Text>\n            </Pressable>\n        );\n    } else {\n        return (<View></View>);\n    }\n};\n\nfunction RottenTomatoes({Ratings, Title}:  MovieMoreInfo ){\n    let searchURL = \"https://www.rottentomatoes.com/search?search=\"+Title;\n    let review = Ratings.find(rating => rating.Source == \"Rotten Tomatoes\");\n    if (review != undefined || review != null) {\n        return (\n            <Pressable style={styles.rating} onPress={() => { Linking.openURL(searchURL) }}>\n                <SvgXml width=\"80\" height=\"100\" xml={RottenTomatoesIcon} />\n                <Text style={styles.text}>{review.Value}</Text>\n            </Pressable>\n        );\n    } else {\n        return (<View></View>);\n    }\n};\n\nfunction MetaCritic({Ratings, Title}: MovieMoreInfo) {\n    let searchURL = \"https://www.metacritic.com/search/all/\"+Title+\"/results\";\n    let review = Ratings.find(rating => rating.Source == \"Metacritic\");\n    if (review != undefined || review != null) {\n        return (\n            <Pressable style={styles.rating} onPress={() => { Linking.openURL(searchURL) }}>\n                <SvgXml width=\"80\" height=\"100\" xml={MetacriticLogo} />\n                <Text style={styles.text}>{review.Value}</Text>\n            </Pressable>\n        );\n    } else {\n        return (<View></View>);\n    }\n}\n\nfunction NoneFound({Ratings}: MovieMoreInfo) {\n    const review = Ratings.find(rating => rating.Source == \"N/a\");\n    if (review != undefined || review != null) {\n        return (\n            <View style={styles.rating} >\n                <MaterialIcons name=\"error-outline\" size={40} color=\"black\" style={styles.error}/>\n                <Text style={styles.text}>Reviews not found</Text>\n            </View>\n        );\n    } else {\n        return (<View></View>);\n    }\n}\ninterface Props {\n    moreInfo: MovieMoreInfo;\n}\n\nconst ReviewList = ({moreInfo}: Props) => {\n    return (\n        <View style={styles.container}>\n            <IMDB Ratings={moreInfo.Ratings} Title={moreInfo.Title} />\n            <RottenTomatoes Ratings={moreInfo.Ratings} Title={moreInfo.Title} />\n            <MetaCritic Ratings={moreInfo.Ratings} Title={moreInfo.Title} />\n            <NoneFound Ratings={moreInfo.Ratings} />\n        </View>\n    );\n}\n    \nconst styles = StyleSheet.create({\n    container: {\n        top: -10,\n        flexDirection: \"row\",\n        alignSelf: \"center\",\n        alignContent: \"space-between\",\n        minHeight: 100,\n    },\n    rating: {\n        color: '#fff',\n        margin: 10,\n    },\n    text: {\n        color: \"#000\",\n        top: -20,\n        fontSize: 20,\n        fontWeight: \"bold\",\n        textAlign: \"center\",\n    },\n    error: {\n        textAlign: \"center\",\n        top: -10,\n        paddingBottom: 10,\n    }\n});\n\nexport default ReviewList;\n"]},"metadata":{},"sourceType":"module"}